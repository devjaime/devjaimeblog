---
import { GLOBAL } from "../../lib/variables";
---

<section class="hero-section relative">
  <!-- Animated background elements -->
  <div class="absolute inset-0 -z-10">
    <div class="floating-shapes">
      <div class="shape shape-1"></div>
      <div class="shape shape-2"></div>
      <div class="shape shape-3"></div>
    </div>
  </div>

  <!-- AI Agent Animation -->
  <div class="ai-agent-animation absolute top-12 right-12 hidden lg:block z-10">
    <div class="ai-terminal-container ai-glow">
      <div class="terminal-header">
        <div class="terminal-buttons">
          <div class="terminal-button close"></div>
          <div class="terminal-button minimize"></div>
          <div class="terminal-button maximize"></div>
        </div>
        <div class="terminal-title">
          <span class="ai-gradient-text">AI Agent Terminal</span>
        </div>
      </div>
      
      <div class="terminal-content">
        <div class="terminal-line">
          <span class="prompt">$</span>
          <span class="command ai-typing">initializing AI system...</span>
        </div>
        <div class="terminal-line">
          <span class="prompt">$</span>
          <span class="command ai-typing">analyzing portfolio...</span>
        </div>
        <div class="terminal-line">
          <span class="prompt">$</span>
          <span class="command ai-typing">optimizing code...</span>
        </div>
        <div class="terminal-line">
          <span class="prompt">$</span>
          <span class="command ai-typing">deploying automation...</span>
        </div>
        <div class="terminal-line">
          <span class="prompt">$</span>
          <span class="command ai-typing">✅ Success!</span>
        </div>
        <div class="terminal-line">
          <span class="prompt">$</span>
          <span class="cursor">_</span>
        </div>
      </div>
    </div>
  </div>

  <div class="container mx-auto px-4 py-16 max-w-7xl">
    <!-- Mobile Layout: Side by side -->
    <div class="lg:hidden flex flex-col items-center gap-8">
      
      <!-- Profile Image with AI transformation animation -->
      <div class="profile-container relative group" id="profile-auto-anim-mobile">
        <div class="profile-glow absolute inset-0 bg-green-500/20 rounded-full blur-xl group-hover:bg-green-500/30 transition-all duration-500"></div>
        
        <!-- Human Profile Image -->
        <img
          src={GLOBAL.profileImage}
          alt={GLOBAL.profileAlt}
          class="profile-image human-image relative rounded-full w-40 h-40 sm:w-48 sm:h-48 object-cover grayscale hover:grayscale-0 transition-all duration-700 ease-out transform hover:scale-105 hover:rotate-2 shadow-2xl border-4 border-zag-light/20 dark:border-zag-dark/20 hover:border-green-500/50 z-10"
          loading="eager"
          width="192"
          height="192"
        />
        
        <!-- AI Brain Overlay -->
        <div class="ai-brain-overlay absolute inset-0 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-1000 ease-in-out z-20">
          <div class="ai-brain-container relative w-full h-full">
            <!-- Simple AI Brain Icon -->
            <div class="ai-brain-icon absolute inset-0 flex items-center justify-center">
              <svg class="w-16 h-16 text-green-400 opacity-0 group-hover:opacity-100 transition-all duration-1000" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
              </svg>
            </div>
            
            <!-- Data Particles -->
            <div class="data-particles absolute inset-0">
              <div class="particle" style="top: 20%; left: 30%;"></div>
              <div class="particle" style="top: 40%; left: 70%;"></div>
              <div class="particle" style="top: 60%; left: 20%;"></div>
              <div class="particle" style="top: 80%; left: 80%;"></div>
            </div>
          </div>
        </div>
        
        <div class="profile-ring absolute inset-0 rounded-full border-2 border-green-500/30 animate-pulse"></div>
        
        <!-- Transformation Text -->
        <div class="transformation-text absolute -bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-all duration-500 text-green-400 text-sm font-mono">
          Human → AI
        </div>
      </div>

      <!-- Content with staggered animations -->
      <div class="content-container text-center flex-1 max-w-none">
        
        <!-- Name with AI gradient animation -->
        <h1 class="hero-title text-4xl sm:text-5xl font-display font-bold mb-4 ai-gradient-text animate-fade-in-up">
          {GLOBAL.username}
        </h1>

        <!-- Short description with AI typing animation -->
        <h2 class="hero-subtitle text-xl sm:text-2xl font-mono font-medium mb-4 text-zag-text animate-fade-in-up animation-delay-200 break-words">
          <span class="ai-typing">{GLOBAL.shortDescription}</span>
        </h2>

        <!-- Long description with fade animation -->
        <p class="hero-description text-lg zag-muted mb-8 leading-relaxed animate-fade-in-up animation-delay-400 break-words">
          {GLOBAL.heroDescription}
        </p>

        <!-- Action buttons with AI hover effects -->
        <div class="hero-buttons flex flex-wrap gap-4 justify-center animate-fade-in-up animation-delay-600">
          <a 
            href={GLOBAL.linkedinProfile} 
            class="ai-button bg-green-500 text-white px-6 py-3 rounded-lg font-medium flex items-center gap-2 hover:bg-green-600"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="LinkedIn Profile"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="transition-transform group-hover:scale-110">
              <path d="M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11.12 19h-3.08v-9h3.08v9zm-1.54-10.29c-.99 0-1.79-.8-1.79-1.79s.8-1.79 1.79-1.79 1.79.8 1.79 1.79-.8 1.79-1.79 1.79zm13.16 10.29h-3.08v-4.89c0-1.16-.02-2.64-1.61-2.64s-1.86 1.26-1.86 2.57v4.96h-3.08v-9h2.96v1.23h.04c.41-.78 1.4-1.6 2.88-1.6 3.08 0 3.65 2.03 3.65 4.66v4.71z"/>
            </svg>
            {GLOBAL.connectButton}
          </a>
          
          <a 
            href={GLOBAL.githubProfile} 
            class="ai-button border-2 border-green-500 text-green-500 px-6 py-3 rounded-lg font-medium flex items-center gap-2 hover:text-white hover:bg-green-500"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="GitHub Repository"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="transition-transform group-hover:scale-110">
              <path d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2"/>
            </svg>
            {GLOBAL.viewCodeButton}
          </a>
        </div>
      </div>
    </div>

    <!-- Desktop Layout: Image on top, content below -->
    <div class="hidden lg:flex flex-col items-center gap-12">
      
      <!-- Profile Image with AI transformation animation - TOP -->
      <div class="profile-container relative group" id="profile-auto-anim-desktop">
        <div class="profile-glow absolute inset-0 bg-green-500/20 rounded-full blur-xl group-hover:bg-green-500/30 transition-all duration-500"></div>
        
        <!-- Human Profile Image -->
        <img
          src={GLOBAL.profileImage}
          alt={GLOBAL.profileAlt}
          class="profile-image human-image relative rounded-full w-80 h-80 xl:w-96 xl:h-96 object-cover grayscale hover:grayscale-0 transition-all duration-700 ease-out transform hover:scale-105 hover:rotate-2 shadow-2xl border-4 border-zag-light/20 dark:border-zag-dark/20 hover:border-green-500/50 z-10"
          loading="eager"
          width="384"
          height="384"
        />
        
        <!-- AI Brain Overlay -->
        <div class="ai-brain-overlay absolute inset-0 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-1000 ease-in-out z-20">
          <div class="ai-brain-container relative w-full h-full">
            <!-- Simple AI Brain Icon -->
            <div class="ai-brain-icon absolute inset-0 flex items-center justify-center">
              <svg class="w-32 h-32 text-green-400 opacity-0 group-hover:opacity-100 transition-all duration-1000" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
              </svg>
            </div>
            
            <!-- Data Particles -->
            <div class="data-particles absolute inset-0">
              <div class="particle" style="top: 20%; left: 30%;"></div>
              <div class="particle" style="top: 40%; left: 70%;"></div>
              <div class="particle" style="top: 60%; left: 20%;"></div>
              <div class="particle" style="top: 80%; left: 80%;"></div>
            </div>
          </div>
        </div>

        <!-- Data Transfer Overlay (auto o tras 5s de foco) -->
        <div class="data-transfer pointer-events-none absolute inset-0 z-30">
          <span class="stream stream-1"></span>
          <span class="stream stream-2"></span>
          <span class="stream stream-3"></span>
          <span class="stream stream-4"></span>
          <span class="stream stream-5"></span>
        </div>
        
        <div class="profile-ring absolute inset-0 rounded-full border-2 border-green-500/30 animate-pulse"></div>
        
        <!-- Transformation Text -->
        <div class="transformation-text absolute -bottom-12 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-all duration-500 text-green-400 text-lg font-mono">
          Human → AI
        </div>
      </div>

      <!-- AI Chat Panel (aparece tras foco de 5s) -->
      <div id="ai-chat-panel" class="ai-chat hidden">
        <div class="ai-chat-header">
          <span class="dot"></span>
          <span class="title">Chat con DevJaime (IA)</span>
          <button id="ai-chat-close" aria-label="Cerrar chat">×</button>
        </div>
        <div class="ai-chat-messages" id="ai-chat-messages">
          <div class="msg bot">Hola, soy la versión IA de Jaime. ¿En qué te puedo ayudar?</div>
        </div>
        <form id="ai-chat-form" class="ai-chat-input" autocomplete="off">
          <input id="ai-chat-text" type="text" placeholder="Escribe tu mensaje..." maxlength="240" />
          <button type="submit" class="send">Enviar</button>
        </form>
      </div>

      <!-- Content with staggered animations - BOTTOM -->
      <div class="content-container text-center flex-1 max-w-4xl">
        
        <!-- Name with AI gradient animation -->
        <h1 class="hero-title text-4xl xl:text-5xl 2xl:text-6xl font-display font-bold mb-6 ai-gradient-text animate-fade-in-up">
          {GLOBAL.username}
        </h1>

        <!-- Short description with AI typing animation -->
        <h2 class="hero-subtitle text-xl xl:text-2xl 2xl:text-3xl font-mono font-medium mb-6 text-zag-text animate-fade-in-up animation-delay-200 break-words">
          <span class="ai-typing">{GLOBAL.shortDescription}</span>
        </h2>

        <!-- Long description with fade animation -->
        <p class="hero-description text-lg xl:text-xl 2xl:text-2xl zag-muted mb-12 leading-relaxed animate-fade-in-up animation-delay-400 break-words">
          {GLOBAL.heroDescription}
        </p>

        <!-- Action buttons with AI hover effects -->
        <div class="hero-buttons flex flex-wrap gap-6 justify-center animate-fade-in-up animation-delay-600">
          <a 
            href={GLOBAL.linkedinProfile} 
            class="ai-button bg-green-500 text-white px-6 py-3 xl:px-8 xl:py-4 rounded-lg font-medium flex items-center gap-2 hover:bg-green-600 text-base xl:text-lg"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="LinkedIn Profile"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="transition-transform group-hover:scale-110">
              <path d="M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11.12 19h-3.08v-9h3.08v9zm-1.54-10.29c-.99 0-1.79-.8-1.79-1.79s.8-1.79 1.79-1.79 1.79.8 1.79 1.79-.8 1.79-1.79 1.79zm13.16 10.29h-3.08v-4.89c0-1.16-.02-2.64-1.61-2.64s-1.86 1.26-1.86 2.57v4.96h-3.08v-9h2.96v1.23h.04c.41-.78 1.4-1.6 2.88-1.6 3.08 0 3.65 2.03 3.65 4.66v4.71z"/>
            </svg>
            {GLOBAL.connectButton}
          </a>
          
          <a 
            href={GLOBAL.githubProfile} 
            class="ai-button border-2 border-green-500 text-green-500 px-6 py-3 xl:px-8 xl:py-4 rounded-lg font-medium flex items-center gap-2 hover:text-white hover:bg-green-500 text-base xl:text-lg"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="GitHub Repository"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="transition-transform group-hover:scale-110">
              <path d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2"/>
            </svg>
            {GLOBAL.viewCodeButton}
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Hero Section Styles */
  .hero-section {
    min-height: 80vh;
    display: flex;
    align-items: center;
  }

  /* AI Agent Animation */
  .ai-agent-animation {
    animation: slideInFromRight 1s ease-out 0.5s both;
  }

  .ai-terminal {
    animation: terminalGlow 3s ease-in-out infinite;
  }

  .command-line {
    margin-bottom: 0.5rem;
    opacity: 0;
    animation: fadeInCommand 0.5s ease-out forwards;
  }

  .command-line:nth-child(1) { animation-delay: 1s; }
  .command-line:nth-child(2) { animation-delay: 2s; }
  .command-line:nth-child(3) { animation-delay: 3s; }
  .command-line:nth-child(4) { animation-delay: 4s; }
  .command-line:nth-child(5) { animation-delay: 5s; }

  .typing-command {
    border-right: 2px solid #22c55e;
    animation: blink 1s infinite;
  }

  /* Floating Shapes Animation */
  .floating-shapes {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .shape {
    position: absolute;
    background: linear-gradient(45deg, rgba(34, 197, 94, 0.1), rgba(59, 130, 246, 0.1));
    border-radius: 50%;
    animation: float 6s ease-in-out infinite;
  }

  .shape-1 {
    width: 200px;
    height: 200px;
    top: 10%;
    left: 10%;
    animation-delay: 0s;
  }

  .shape-2 {
    width: 150px;
    height: 150px;
    top: 60%;
    right: 15%;
    animation-delay: 2s;
  }

  .shape-3 {
    width: 100px;
    height: 100px;
    bottom: 20%;
    left: 20%;
    animation-delay: 4s;
  }

  /* Profile Image Animations */
  .profile-container {
    animation: fadeInUp 1s ease-out 0.3s both;
  }

  .profile-glow {
    animation: glowPulse 3s ease-in-out infinite;
  }

  .profile-ring {
    animation: ringPulse 2s ease-in-out infinite;
  }

  /* Auto trigger states (simulate hover) */
  .profile-container.ai-auto .ai-brain-overlay {
    opacity: 1;
  }
  .profile-container.ai-auto .ai-brain-icon svg {
    opacity: 1;
  }
  .profile-container.ai-auto .transformation-text {
    opacity: 1;
  }
  .profile-container.ai-auto .profile-image {
    filter: grayscale(0);
    transform: scale(1.05) rotate(2deg);
  }
  .profile-container.ai-auto .profile-glow {
    background-color: rgba(34, 197, 94, 0.3);
  }

  /* Improve text wrapping to avoid clipping */
  .hero-title, .hero-subtitle, .hero-description {
    overflow: visible;
    word-wrap: break-word;
    overflow-wrap: anywhere;
    word-break: break-word;
    hyphens: auto;
  }

  /* AI Brain Transformation */
  .ai-brain-overlay {
    background: radial-gradient(circle, rgba(34, 197, 94, 0.1) 0%, transparent 70%);
    backdrop-filter: blur(2px);
  }

  .data-particles .particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: #22c55e;
    border-radius: 50%;
    opacity: 0;
    animation: particlePulse 2s ease-in-out infinite;
  }

  .data-particles .particle:nth-child(1) { animation-delay: 0s; }
  .data-particles .particle:nth-child(2) { animation-delay: 0.5s; }
  .data-particles .particle:nth-child(3) { animation-delay: 1s; }
  .data-particles .particle:nth-child(4) { animation-delay: 1.5s; }

  .ai-brain-icon svg {
    filter: drop-shadow(0 0 10px rgba(34, 197, 94, 0.5));
  }

  /* Content Animations */
  .hero-title {
    animation: fadeInUp 1s ease-out 0.5s both;
  }

  .hero-subtitle {
    animation: fadeInUp 1s ease-out 0.7s both;
  }

  .hero-description {
    animation: fadeInUp 1s ease-out 0.9s both;
  }

  .hero-buttons {
    animation: fadeInUp 1s ease-out 1.1s both;
  }

  /* Typing Animation */
  .typing-text {
    overflow: hidden;
    border-right: 2px solid #22c55e;
    white-space: nowrap;
    animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
  }

  /* Button Animations */
  .btn-primary, .btn-secondary {
    transition: all 0.3s ease;
  }

  .btn-primary:hover, .btn-secondary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(34, 197, 94, 0.3);
  }

  /* Keyframe Animations */
  @keyframes slideInFromRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes terminalGlow {
    0%, 100% { box-shadow: 0 0 20px rgba(34, 197, 94, 0.3); }
    50% { box-shadow: 0 0 30px rgba(34, 197, 94, 0.6); }
  }

  @keyframes fadeInCommand {
    from {
      opacity: 0;
      transform: translateX(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes blink {
    0%, 50% { border-color: transparent; }
    51%, 100% { border-color: #22c55e; }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    33% {
      transform: translateY(-20px) rotate(120deg);
    }
    66% {
      transform: translateY(-10px) rotate(240deg);
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes glowPulse {
    0%, 100% {
      opacity: 0.2;
      transform: scale(1);
    }
    50% {
      opacity: 0.4;
      transform: scale(1.05);
    }
  }

  @keyframes ringPulse {
    0%, 100% {
      opacity: 0.3;
      transform: scale(1);
    }
    50% {
      opacity: 0.6;
      transform: scale(1.1);
    }
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: #22c55e; }
  }

  @keyframes particlePulse {
    0%, 100% {
      opacity: 0;
      transform: scale(0);
    }
    50% {
      opacity: 1;
      transform: scale(1);
    }
  }

  /* Responsive adjustments */
  @media (max-width: 1024px) {
    .ai-agent-animation {
      display: none;
    }
  }

  /* Desktop optimizations */
  @media (min-width: 1024px) {
    .hero-section {
      min-height: 90vh;
      padding: 2rem 0;
    }

    .container {
      max-width: 1400px;
      padding-left: 2rem;
      padding-right: 2rem;
    }

    .content-container {
      padding-left: 0;
      flex: 1;
    }

    .hero-title {
      font-size: 4rem;
      line-height: 1.1;
      margin-bottom: 1.5rem;
    }

    .hero-subtitle {
      font-size: 1.5rem;
      line-height: 1.4;
      margin-bottom: 1.5rem;
    }

    .hero-description {
      font-size: 1.125rem;
      line-height: 1.6;
      margin-bottom: 2rem;
    }

    .hero-buttons {
      gap: 1.5rem;
      margin-top: 1.5rem;
    }

    .ai-button {
      padding: 1rem 2rem;
      font-size: 1rem;
      min-width: 160px;
    }
  }

  @media (min-width: 1280px) {
    .container {
      max-width: 1600px;
      padding-left: 3rem;
      padding-right: 3rem;
    }

    .hero-title {
      font-size: 4.5rem;
    }

    .hero-subtitle {
      font-size: 1.75rem;
    }

    .hero-description {
      font-size: 1.25rem;
    }

    .ai-button {
      padding: 1.25rem 2.5rem;
      font-size: 1.125rem;
      min-width: 180px;
    }
  }

  @media (min-width: 1536px) {
    .container {
      max-width: 1800px;
      padding-left: 4rem;
      padding-right: 4rem;
    }

    .hero-title {
      font-size: 5rem;
    }

    .hero-subtitle {
      font-size: 2rem;
    }

    .hero-description {
      font-size: 1.375rem;
    }

    .ai-agent-animation {
      top: 16;
      right: 16;
    }
  }

  @media (min-width: 1920px) {
    .container {
      max-width: 2000px;
      padding-left: 5rem;
      padding-right: 5rem;
    }

    .hero-title {
      font-size: 5.5rem;
    }

    .hero-subtitle {
      font-size: 2.25rem;
    }

    .hero-description {
      font-size: 1.5rem;
    }

    .ai-button {
      padding: 1.5rem 3rem;
      font-size: 1.25rem;
      min-width: 200px;
    }
  }

  @media (max-width: 640px) {
    .hero-section {
      padding: 1rem;
    }

    .content-container {
      padding: 0 1rem;
      width: 100%;
      max-width: 100%;
    }

    .hero-subtitle {
      font-size: 1.125rem;
      line-height: 1.5;
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
    }
    
    .hero-description {
      font-size: 1rem;
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
    }

    .hero-title {
      font-size: 2.5rem;
      line-height: 1.2;
      word-wrap: break-word;
      overflow-wrap: break-word;
    }

    .hero-buttons {
      flex-direction: column;
      align-items: center;
      width: 100%;
    }

    .ai-button {
      width: 100%;
      max-width: 280px;
      justify-content: center;
    }
  }

  @media (max-width: 480px) {
    .hero-section {
      padding: 0.5rem;
    }

    .content-container {
      padding: 0 0.5rem;
    }

    .hero-title {
      font-size: 1.75rem;
      line-height: 1.1;
      word-wrap: break-word;
      overflow-wrap: break-word;
    }

    .hero-subtitle {
      font-size: 0.875rem;
      line-height: 1.4;
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
    }

    .hero-description {
      font-size: 0.75rem;
      line-height: 1.5;
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
    }

    .ai-button {
      padding: 0.75rem 1rem;
      font-size: 0.875rem;
      white-space: nowrap;
    }
  }

  /* Data Transfer Animation */
  .data-transfer { opacity: 0; transition: opacity 400ms ease; }
  .profile-container.ai-transfer-active .data-transfer { opacity: 1; }
  .data-transfer .stream { position: absolute; left: 50%; top: 50%; width: 2px; height: 40%; transform-origin: bottom center; background: linear-gradient(to top, rgba(34,197,94,0), rgba(34,197,94,0.8)); filter: blur(0.3px); animation: streamFlow 1.2s ease-in-out infinite; }
  .data-transfer .stream-1 { transform: translate(-50%, -50%) rotate(0deg); animation-delay: 0s; }
  .data-transfer .stream-2 { transform: translate(-50%, -50%) rotate(45deg); animation-delay: 0.2s; }
  .data-transfer .stream-3 { transform: translate(-50%, -50%) rotate(90deg); animation-delay: 0.4s; }
  .data-transfer .stream-4 { transform: translate(-50%, -50%) rotate(135deg); animation-delay: 0.6s; }
  .data-transfer .stream-5 { transform: translate(-50%, -50%) rotate(180deg); animation-delay: 0.8s; }
  @keyframes streamFlow { 0% { opacity: 0; height: 0%; } 40% { opacity: 1; } 100% { opacity: 0; height: 45%; } }

  /* AI Chat */
  .ai-chat { position: fixed; right: 16px; bottom: 16px; z-index: 40; width: 420px; max-width: 92vw; background: rgba(15,23,42,0.88); border: 1px solid rgba(34,197,94,0.4); border-radius: 12px; box-shadow: 0 20px 40px rgba(0,0,0,0.45); backdrop-filter: blur(6px); overflow: hidden; opacity: 0; transform: translateY(12px) scale(0.98); }
  .ai-chat.open { display: block; }
  .ai-chat.hidden { display: none; }
  .ai-chat-header { display: flex; align-items: center; gap: 10px; padding: 10px 12px; background: rgba(34,197,94,0.08); border-bottom: 1px solid rgba(34,197,94,0.25); }
  .ai-chat-header .dot { width: 10px; height: 10px; border-radius: 50%; background: #22c55e; box-shadow: 0 0 8px rgba(34,197,94,0.8); }
  .ai-chat-header .title { color: #cbd5e1; font-weight: 600; font-size: 0.9rem; }
  .ai-chat-header button { margin-left: auto; background: transparent; color: #cbd5e1; border: none; font-size: 1.25rem; line-height: 1; cursor: pointer; }
  .ai-chat-messages { max-height: 260px; overflow-y: auto; padding: 12px; display: flex; flex-direction: column; gap: 8px; }
  .ai-chat-messages .msg { padding: 8px 12px; border-radius: 10px; max-width: 85%; font-size: 0.95rem; line-height: 1.35; word-break: break-word; }
  .ai-chat-messages .msg.bot { background: rgba(34,197,94,0.12); border: 1px solid rgba(34,197,94,0.25); color: #e2e8f0; align-self: flex-start; }
  .ai-chat-messages .msg.user { background: rgba(2,6,23,0.6); border: 1px solid rgba(148,163,184,0.3); color: #e2e8f0; align-self: flex-end; }
  .ai-chat-input { display: flex; gap: 8px; padding: 10px; border-top: 1px solid rgba(34,197,94,0.25); background: rgba(2,6,23,0.6); }
  .ai-chat-input input { flex: 1; background: rgba(15,23,42,0.7); border: 1px solid rgba(148,163,184,0.3); border-radius: 8px; padding: 10px 12px; color: #e2e8f0; outline: none; }
  .ai-chat-input input::placeholder { color: #94a3b8; }
  .ai-chat-input .send { background: #22c55e; color: white; border: none; border-radius: 8px; padding: 10px 14px; cursor: pointer; }
 
  @media (max-width: 1024px) {
    .ai-chat { right: 0; left: 0; bottom: 0; margin: 0 auto; width: 100vw; max-width: 100vw; border-radius: 16px 16px 0 0; }
    .ai-chat-messages { max-height: 40vh; }
  }
</style>

<script>
  // Intersection Observer for animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        (entry.target as HTMLElement).style.animationPlayState = 'running';
      }
    });
  }, observerOptions);

  // Observe animated elements
  document.addEventListener('DOMContentLoaded', () => {
    const animatedElements = document.querySelectorAll('.hero-title, .hero-subtitle, .hero-description, .hero-buttons, .profile-container');
    animatedElements.forEach(el => {
      observer.observe(el);
    });

    // Profile image bounce effect
    const hoverImage = document.querySelector('.profile-image') as HTMLElement | null;
    if (hoverImage) {
      hoverImage.addEventListener('mouseenter', () => {
        hoverImage.style.transform = 'scale(1.05) rotate(2deg)';
      });
      
      hoverImage.addEventListener('mouseleave', () => {
        hoverImage.style.transform = 'scale(1) rotate(0deg)';
      });
    }

    const containers: HTMLElement[] = [];
    const mobileC = document.getElementById('profile-auto-anim-mobile') as HTMLElement | null;
    const desktopC = document.getElementById('profile-auto-anim-desktop') as HTMLElement | null;
    if (mobileC) containers.push(mobileC);
    if (desktopC) containers.push(desktopC);

    const chatPanel = document.getElementById('ai-chat-panel') as HTMLElement | null;
    const closeBtn = document.getElementById('ai-chat-close');

    function openChatFromPhoto(img: HTMLElement | null) {
      if (!chatPanel) return;
      chatPanel.classList.remove('hidden');
      try {
        if (img) {
          const imgRect = img.getBoundingClientRect();
          const panelRect = chatPanel.getBoundingClientRect();
          const dx = (imgRect.left + imgRect.width/2) - (panelRect.left + panelRect.width/2);
          const dy = (imgRect.top + imgRect.height/2) - (panelRect.top + panelRect.height/2);
          chatPanel.style.transition = 'none';
          chatPanel.style.opacity = '0';
          chatPanel.style.transform = `translate(${dx}px, ${dy}px) scale(0.7)`;
          requestAnimationFrame(() => {
            chatPanel.style.transition = 'transform 400ms ease, opacity 400ms ease';
            chatPanel.style.opacity = '1';
            chatPanel.style.transform = 'translate(0,0) scale(1)';
          });
        }
      } catch {}
    }

    function closeChat() {
      if (!chatPanel) return;
      chatPanel.classList.add('hidden');
      chatPanel.style.transition = '';
      chatPanel.style.transform = '';
      chatPanel.style.opacity = '';
    }
    closeBtn?.addEventListener('click', () => closeChat());

    function setupDwell(container: HTMLElement) {
      const img = container.querySelector('.profile-image') as HTMLElement | null;
      let isVisible = false;
      let isActive = !document.hidden;
      let dwellTimer: number | null = null;

      const visibilityObserver = new IntersectionObserver(([entry]) => {
        isVisible = entry.isIntersecting;
        if (isVisible && isActive) scheduleDwell(); else clearDwell();
      }, { threshold: 0.6 });
      visibilityObserver.observe(container);

      document.addEventListener('visibilitychange', () => {
        isActive = !document.hidden;
        if (isActive && isVisible) scheduleDwell(); else clearDwell();
      });

      function clearDwell() { if (dwellTimer) { clearTimeout(dwellTimer); dwellTimer = null; } }
      function scheduleDwell() {
        clearDwell();
        dwellTimer = window.setTimeout(() => {
          container.classList.add('ai-transfer-active');
          openChatFromPhoto(img);
          setTimeout(() => container.classList.remove('ai-transfer-active'), 3000);
        }, 5000);
      }

      // efecto periódico
      setInterval(() => {
        if (!isActive || !isVisible) return;
        container.classList.add('ai-auto');
        setTimeout(() => container.classList.remove('ai-auto'), 2000);
      }, 8000);
    }

    containers.forEach(setupDwell);
  });
</script>

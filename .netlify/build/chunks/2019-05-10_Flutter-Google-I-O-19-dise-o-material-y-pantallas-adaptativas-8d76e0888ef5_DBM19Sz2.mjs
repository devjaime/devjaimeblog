/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"flutter-google-io19-diseño-material-y-pantallas-adaptativas\">Flutter Google I/O’19 diseño material y pantallas adaptativas</h1>\n<p>Hoy quisiera comentar la impresionante presentación de Flutter en google I/O en el segundo vídeo que veo de google I/O se nos muestra lo…</p>\n<hr>\n<h3 id=\"flutter-google-io19-diseño-material-y-pantallas-adaptativas-1\">Flutter Google I/O’19 diseño material y pantallas adaptativas</h3>\n<p>Hoy quisiera comentar la impresionante presentación de Flutter en google I/O en el segundo vídeo que veo de google I/O se nos muestra lo que se viene en el diseño material (material design) y pantallas adaptativas y se nos muestra que en teoria Flutter puede ejecutarse desde un smartwatch hasta un televisor.</p>\n<p>El vídeo a continuación</p>\n<p>Lo primero que me llamo la atención es que se nos muestra 3 panoramas</p>\n<ol>\n<li>- El primero es el echo de la capacidad de tener un solo código base y renderizar las controles adecuados tanto para IOS como para Android, mostrando en IOS los controles de cupertino y Android material design</li>\n<li>Lo segundo es la capacidad de renderizar y personalizar nuestros controles de casi cualquier manera, donde se nos muestra una barra de control deslizante al más puro estilo pink Floyd</li>\n</ol>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*lhsfg7fS1WN-hG62u-7lmw.png\" alt=\"\"></p>\n<p>También se nos muestran varias características nuevas como natural semantic lenguage y mejores constraste para material</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*Pq-BqJ-fH9O1derR-57f6Q.png\" alt=\"\"></p>\n<p>3.- La tercera parte correspondiente a adaptative component me parecio digno de un post ya que es muy innovador</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*K3-1QWkhLPpHAGSOs5JMzw.png\" alt=\"\"></p>\n<p>Para lograr el comportamiento esperado se explica la teoría de las pantallas pasivas y activas y su relación de aspecto, se debe entender que el diseño que se muestra en un televisor sera mucho más pasivo en cuanto a su interactividad, pero a la vez su información o aspecto sera mayor a la de una tablet, telefono, donde se requiere más interactividad ya que estaremos más de cerca, sin embargo el smartwatch o reloj inteligente, requiere menos interectividad rompiendo nuestro algoritmo adaptativo, es acá donde se nos muestra una solución brillante poco convencional y podría decir muy innovadora</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*P9Z2IP58SdM6X636E_X8fA.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*Le3JCZF2r2As60FH5Tg11g.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*EHHJBXGcKllH6MqWxNGqUQ.png\" alt=\"\"></p>\n<p>Aunque el algoritmo es en modo experimental el seguirlo no es complicado y es fácil entender como seguir aplicarlo para las distintas pantallas</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*3qAKgpmy7KC2pm0fJ77InQ.png\" alt=\"\"></p>\n<p>Acá se nos muestra en una pared corriendo Flutter aplicando el mismo principio</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*sBUZjYK6WR2Xd6fgQwlwbA.png\" alt=\"\"></p>\n<p>y por si fuera poco para controlar la interactividad y relación de aspecto se nos muestra un ejemplo con ML ocupando la cámara y a medida que la persona se aproxima al dispositivo este cambia su aspecto he interactividad.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*VkLr12FGLMpqD3xP6h1kEA.png\" alt=\"\"></p>\n<p>Creo que es mucho por procesar aún muy innovador, enorme potencial mucho por digerir y aun no veo todos los videos de Google I/O.</p>\n<p><a href=\"https://www.paypal.com/donate/?hosted_button_id=AHPZLS6ZR2A7S\" title=\"https://www.paypal.com/donate/?hosted_button_id=AHPZLS6ZR2A7S\"><strong>Donate to devjaime</strong><br>\n_Help support devjaime by donating or sharing with your friends._www.paypal.com</a><a href=\"https://www.paypal.com/donate/?hosted_button_id=AHPZLS6ZR2A7S\"></a></p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hernández</a> on <a href=\"https://medium.com/p/8d76e0888ef5\">May 10, 2019</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/flutter-google-i-o19-dise%C3%B1o-material-y-pantallas-adaptativas-8d76e0888ef5\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"Flutter Google I/O’19 diseño material y pantallas adaptativas","description":"","tags":["code","html","Google","material desing"],"time":4,"featured":true,"timestamp":"2019-05-10T12:20:31-0300","filename":"2019-05-10_Flutter-Google-I-O-19-dise-o-material-y-pantallas-adaptativas-8d76e0888ef5"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2019-05-10_Flutter-Google-I-O-19-dise-o-material-y-pantallas-adaptativas-8d76e0888ef5.md";
				const url = "/blog/2019-05-10_Flutter-Google-I-O-19-dise-o-material-y-pantallas-adaptativas-8d76e0888ef5";
				function rawContent() {
					return "   \n                                        \n                                                                      \n               \n                                                   \n       \n              \n                                     \n                                                                                                 \n   \n\nFlutter Google I/O’19 diseño material y pantallas adaptativas\n=============================================================\n\nHoy quisiera comentar la impresionante presentación de Flutter en google I/O en el segundo vídeo que veo de google I/O se nos muestra lo…\n\n* * *\n\n### Flutter Google I/O’19 diseño material y pantallas adaptativas\n\nHoy quisiera comentar la impresionante presentación de Flutter en google I/O en el segundo vídeo que veo de google I/O se nos muestra lo que se viene en el diseño material (material design) y pantallas adaptativas y se nos muestra que en teoria Flutter puede ejecutarse desde un smartwatch hasta un televisor.\n\nEl vídeo a continuación\n\nLo primero que me llamo la atención es que se nos muestra 3 panoramas\n\n1.  \\- El primero es el echo de la capacidad de tener un solo código base y renderizar las controles adecuados tanto para IOS como para Android, mostrando en IOS los controles de cupertino y Android material design\n2.  Lo segundo es la capacidad de renderizar y personalizar nuestros controles de casi cualquier manera, donde se nos muestra una barra de control deslizante al más puro estilo pink Floyd\n\n![](https://cdn-images-1.medium.com/max/800/1*lhsfg7fS1WN-hG62u-7lmw.png)\n\nTambién se nos muestran varias características nuevas como natural semantic lenguage y mejores constraste para material\n\n![](https://cdn-images-1.medium.com/max/800/1*Pq-BqJ-fH9O1derR-57f6Q.png)\n\n3.- La tercera parte correspondiente a adaptative component me parecio digno de un post ya que es muy innovador\n\n![](https://cdn-images-1.medium.com/max/800/1*K3-1QWkhLPpHAGSOs5JMzw.png)\n\nPara lograr el comportamiento esperado se explica la teoría de las pantallas pasivas y activas y su relación de aspecto, se debe entender que el diseño que se muestra en un televisor sera mucho más pasivo en cuanto a su interactividad, pero a la vez su información o aspecto sera mayor a la de una tablet, telefono, donde se requiere más interactividad ya que estaremos más de cerca, sin embargo el smartwatch o reloj inteligente, requiere menos interectividad rompiendo nuestro algoritmo adaptativo, es acá donde se nos muestra una solución brillante poco convencional y podría decir muy innovadora\n\n![](https://cdn-images-1.medium.com/max/800/1*P9Z2IP58SdM6X636E_X8fA.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*Le3JCZF2r2As60FH5Tg11g.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*EHHJBXGcKllH6MqWxNGqUQ.png)\n\nAunque el algoritmo es en modo experimental el seguirlo no es complicado y es fácil entender como seguir aplicarlo para las distintas pantallas\n\n![](https://cdn-images-1.medium.com/max/800/1*3qAKgpmy7KC2pm0fJ77InQ.png)\n\nAcá se nos muestra en una pared corriendo Flutter aplicando el mismo principio\n\n![](https://cdn-images-1.medium.com/max/800/1*sBUZjYK6WR2Xd6fgQwlwbA.png)\n\ny por si fuera poco para controlar la interactividad y relación de aspecto se nos muestra un ejemplo con ML ocupando la cámara y a medida que la persona se aproxima al dispositivo este cambia su aspecto he interactividad.\n\n![](https://cdn-images-1.medium.com/max/800/1*VkLr12FGLMpqD3xP6h1kEA.png)\n\nCreo que es mucho por procesar aún muy innovador, enorme potencial mucho por digerir y aun no veo todos los videos de Google I/O.\n\n[**Donate to devjaime**  \n_Help support devjaime by donating or sharing with your friends._www.paypal.com](https://www.paypal.com/donate/?hosted_button_id=AHPZLS6ZR2A7S \"https://www.paypal.com/donate/?hosted_button_id=AHPZLS6ZR2A7S\")[](https://www.paypal.com/donate/?hosted_button_id=AHPZLS6ZR2A7S)\n\nBy [Jaime Hernández](https://medium.com/@devjaime) on [May 10, 2019](https://medium.com/p/8d76e0888ef5).\n\n[Canonical link](https://medium.com/@devjaime/flutter-google-i-o19-dise%C3%B1o-material-y-pantallas-adaptativas-8d76e0888ef5)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"flutter-google-io19-diseño-material-y-pantallas-adaptativas","text":"Flutter Google I/O’19 diseño material y pantallas adaptativas"},{"depth":3,"slug":"flutter-google-io19-diseño-material-y-pantallas-adaptativas-1","text":"Flutter Google I/O’19 diseño material y pantallas adaptativas"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

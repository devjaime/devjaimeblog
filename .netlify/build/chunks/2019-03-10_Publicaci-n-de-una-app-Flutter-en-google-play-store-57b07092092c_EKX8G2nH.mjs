/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"publicación-de-una-app-flutter-en-google-play-store\">Publicación de una app Flutter en google play store</h1>\n<p>Hace un tiempo atrás compre una cuenta google play para publicar aplicaciones en la tienda de google play store, la finalidad al principio…</p>\n<hr>\n<h3 id=\"publicación-de-una-app-flutter-en-google-playstore\">Publicación de una app Flutter en google play store</h3>\n<hr>\n<p>Hace un tiempo atrás compre una cuenta google play para publicar aplicaciones en la tienda de google play store, la finalidad al principio es poder tener mi propio portafolio de aplicaciones para posteriormente poder vender alguna de estas aplicaciones en la misma tienda.</p>\n<p>Dentro de estos pasos de publicación lo primero que realice fue inscribir este cuenta que tiene un valor de 25 USD en la pagina oficial, para este primer paso puedes ir a leer un poco sobre publicación de aplicaciones en el sitio oficial de android y posteriormente abrir play console.</p>\n<p>Te dejo el link aquí: <a href=\"https://developer.android.com/distribute/console/?hl=ES\">https://developer.android.com/distribute/console/?hl=ES</a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*JdJSLckFwpVBvOdNMQBL_g.png\" alt=\"\"></p>\n<p>Pagina oficial para el proceso de publicación en la tienda de google play store</p>\n<p>En la tienda debes tener presente 3 factores importantes</p>\n<p>Contar con una cuenta de correo gmail, tener una tarjeta de crédito para adquirir los derechos de publicación y leer todos los tips para poder tener la mejor experiencia de publicación.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*UrXikJj0OqQXWTwEDV77bQ.png\" alt=\"\"></p>\n<p>Google play Console.</p>\n<p>Una vez realizado este paso lo que realice fue ir a la pagina oficial de flutter para poder verificar los pasos de publicación.</p>\n<p>El link es el siguiente: <a href=\"https://flutter.dev/docs/deployment/android\">https://flutter.dev/docs/deployment/android</a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*wrxCK0-5emwaW8ax-VuYaw.png\" alt=\"\"></p>\n<p>pagina oficial de flutter y su sección de despliegue en la tienda de google play store.</p>\n<p>Una buena alternativa (aunque se actualiza con un cierto desfase) es ingresar a la traducción realizada por la comunidad cuyo link seria el siguiente:</p>\n<p><a href=\"https://flutter-es.io/docs/deployment/android\" title=\"https://flutter-es.io/docs/deployment/android\"><strong>Preparando para release una app Android</strong><br>\n_Durante el ciclo de desarrollo típico, probarás una aplicación usando `flutter run` en la línea de comando, los botones…_flutter-es.io</a><a href=\"https://flutter-es.io/docs/deployment/android\"></a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*nSo4hPS2vArZztwOGe-R5A.png\" alt=\"\"></p>\n<p>traducción realizada por la comunidad</p>\n<p>Cabe mencionar que este proyecto de traducción es un gran aporte al cual podrías integrarte sin ningún problema bifucardo su proyecto y apoyando en la traducción, la comunidad te lo agradecería mucho.</p>\n<p>Link</p>\n<p><a href=\"https://github.com/flutter-es\" title=\"https://github.com/flutter-es\"><strong>Flutter ES</strong><br>\n_Comunidad de desarrolladores de Flutter de habla hispana. - Flutter ES_github.com</a><a href=\"https://github.com/flutter-es\"></a></p>\n<p>Entonces para esta demostración ocupare una aplicación que lo único que realiza es la conversión de monedas de un país en otro la cual pueden revisarla del siguiente repositorio:</p>\n<p><a href=\"https://github.com/devjaime/FlutterConversor\" title=\"https://github.com/devjaime/FlutterConversor\"><strong>devjaime/FlutterConversor</strong><br>\n_Simple conversor de monedas para mostrar publicación en la google play store - devjaime/FlutterConversor_github.com</a><a href=\"https://github.com/devjaime/FlutterConversor\"></a></p>\n<p>Entonces el primer paso segun la guia oficial de flutter es revisar App Manifest de Android el cual se encuentra en esta dirección <app dir=\"\">/android/app/src/main</app></p>\n<p>De este apartado dado que nuestra aplicación se conecta a un api obtiene los datos del valor de cada moneda desde internet dejaremos activo el permiso correspondiente a este, si su app no se conecta a internet no es necesario que activen este permiso.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*95Fm22DcfHZVvN7Cctjp3w.png\" alt=\"\"></p>\n<p>Paso 1 sección en la que nos encontramos</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*_ZCz5Csn8-fw7chKYjhfIw.png\" alt=\"\"></p>\n<p>Ruta y descripción donde se encuentran los campos a cambiar.</p>\n<p>Revisando la configuración de compilación</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*QgYB2JSSCL9x-IvzQxthww.png\" alt=\"\"></p>\n<p>Revisión de la ruta de configuración</p>\n<p>Este archivo al principio me costo identificarlo ya que existen varios del mismo nombre por lo cual creo que una captura de pantalla de la aplicación y ver en que lugar se encuentra aclarara esto.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*F0rSLiShkOS1mUghtpqXng.png\" alt=\"\"></p>\n<p>Captura de pantalla para identificar donde se encuentran los valores anteriormente descritos.</p>\n<h3 id=\"añadiendo-un-icono-para-ellauncher\">Añadiendo un icono para el Launcher</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*LzJC9ukRiKH6BNSXZ5Y1dQ.png\" alt=\"\"></p>\n<p>Los distintos iconos que van a aparecer en nuestra app siempre son un tema (ya que existen distintas medidas el como generarlos y donde colocarlos)</p>\n<p>Para los que no saben de que se trata esto les dejo una captura de pantalla:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*OWgVOr1ADxblrHauveOpgw.png\" alt=\"\"></p>\n<p>captura de pantalla realizada desde la extensión vysor <a href=\"https://www.vysor.io/\">https://www.vysor.io/</a></p>\n<p>Para la generación de los distintos tamaños de estos iconos tenemos varias formas de realizarlo, la que mas aconsejo yo (debido a que no soy un diseñador gráfico) es ocupar un programa que haga el trabajo por nosotros</p>\n<p><a href=\"https://appicon.co/\" title=\"https://appicon.co/\"><strong>App Icon Generator</strong><br>\n_Generate icons and images for mobile apps, android and iOS. No need to upload or download. Works on your browser_appicon.co</a><a href=\"https://appicon.co/\"></a></p>\n<p>Con este generador de iconos solo debemos pegar una imagen con la sufiente densidad (densidad mas alta) y generara todos los iconos necesarios).</p>\n<p>Ahora simplemente debemos copiar y reemplazar los iconos y carpetas generadas a nuestra carpeta de assets generados.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*GaiHw8GY6BpCKUItTRMA-w.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*c41V-T6DQhJ9Lru34HsyzA.png\" alt=\"\"></p>\n<p>Ruta donde se deben copiar y reemplazar los iconos</p>\n<p>Firmado de la app</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*70enG2ea54XpKrKdlBqIHg.png\" alt=\"\"></p>\n<p>El firmado de la app fue una de las cosas que más me costo entender y existen varios vídeos y tutoriales de cual es la mejor forma de realizarlo y todas son distintas, por lo cual lo que intente fue realizar la forma más simple posible.</p>\n<p>Lo primero que realice fue ejecutar flutter doctor -v en la terminal para ver donde estaba instalado el jdk de java que ejecuta flutter:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*xEYfgD9gtW_uauXJB3I_LQ.png\" alt=\"\"></p>\n<p>ruta donde se encuentra el java binary at</p>\n<p>Si se van al explorador encontraran una ruta como la siguiente</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*dSgdgEaucWTJRb_w7F1deg.png\" alt=\"\"></p>\n<p>El explorador de windows mostrara la siguiente ruta</p>\n<p>Entonces desde la ventana cmd me muevo a la misma ruta</p>\n<p>Nota importante deben abrir la ventana cmd en modo administrador</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*N2P01JleA3NYmUGDLmEf7w.png\" alt=\"\"></p>\n<p>cmd debe ser abierto como administrador</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*4or2OCSZxXWMKaoXLPrSKA.png\" alt=\"\"></p>\n<p>con cd seguido de la ruta donde se encuentra jre te mueves al directorio para ejecutar el comando</p>\n<p>Luego de lo anterior pegas el comando siguiente:</p>\n<p>keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</p>\n<p>en mi derivación de este comando para windows lo que realice fue cambiar la ruta “~/key.jks” a “c:\\key.jks” también podrías cambiar el alias o el nombre del archivo si lo deseas.</p>\n<p>como se muestra a continuación.</p>\n<p>keytool -genkey -v -keystore c:\\keyapp.jks -keyalg RSA -keysize 2048 -validity 10000 -alias keyapp</p>\n<p>la razón por la que dejo el archivo en la raiz de c: es solo como demostración</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*AueF2x5P96P0J232dXZI2g.png\" alt=\"\"></p>\n<p>y en esta ejecuto el comando anteriormente descrito</p>\n<p>al presionar enter se te ira preguntando los datos necesarios para identificar la clave de publicación</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*8jd0X7Da1oCP6CMkUQIsAQ.png\" alt=\"\"></p>\n<p>Debes ingresar todos los datos solicitados y al finalizar dependiendo en que idioma se encuentre tu sistema operativo dar S=SI o Y=Yes</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*ajUPaeawYcPG1YnFK5-kmA.png\" alt=\"\"></p>\n<p>Al presionar enter te pedirá confirmar si ocuparas la misma clave de almacén en mi caso recomiendo presionar INTRO para ocupar la misma.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*-NweF4-BglRVQAybBfRAfQ.png\" alt=\"\"></p>\n<p>Si todo sale bien tus claves fueron generadas exitosamente en el path que otorgaste.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*bEnOUHQl7kZl9L2tHJHtCw.png\" alt=\"\"></p>\n<p>Referencia al keyStore desde la app</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*yLDDGTQHvtOx2__tvQEzag.png\" alt=\"\"></p>\n<p>Una vez creado el archivo, debes generar una referencia desde la app para esto debes ir al directorio de la aplicación y modificar el archivo key.properties</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*qeDy992JQTYQowCwaIsnmg.png\" alt=\"\"></p>\n<p>ingresa los datos anteriormente puestos como son las password el keyalias y la ruta donde se encuentra el archivo.</p>\n<p>Configurar la firma en Gradle</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*pRxGjCCr-LYDBOm9iR0q2w.png\" alt=\"\"></p>\n<p>Tal como aparece en la gua oficial solo debes reemplazar la información del archivo por la descrita en este apartado quedando de la siguiente forma.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*9Zg-oJyXZJrDTRmeb8d-Vw.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*WMoVdHX0Cn6mixv8sLTqdA.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*qm7ufdRaFO3Pfe-3xrt8FA.png\" alt=\"\"></p>\n<p>Para construir la release debes ejecutar el comando tal como aparece y verificar la salida de este</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*8I6GBnBHfnX8TKVwK6et7w.png\" alt=\"\"></p>\n<p>Desde la consola de visual studio code puedes realizar la tarea de generación del apk</p>\n<p>luego de ejecutar flutter build apk</p>\n<p>debes ejecutar el comando flutter install si quieres instalar y probar tu aplicación</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*DsaDi0hnbqGq1i6g-oa_Jw.png\" alt=\"\"></p>\n<p>en este caso la instalo directamente en el dispositivo de prueba.</p>\n<p>Ahora solo nos queda publicar nuestra app con google play console</p>\n<p>Recomiendo crear la ficha de play store y completar los datos correspondientes</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*Oi1vpZrXhgBb1kXVFdlqeg.png\" alt=\"\"></p>\n<p>Crear los iconos e imágenes</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*d55zW2MlVaosURDj5vTJRg.png\" alt=\"\"></p>\n<p>Para crear las imágenes recomiendo este link en donde a traces de una captura de pantalla puedes generar los distintos iconos de la aplicación para visualizarlos en la tienda.</p>\n<p><a href=\"https://theapplaunchpad.com/\" title=\"https://theapplaunchpad.com/\"><strong>App Screenshot Generator for App Store &#x26; Google Play</strong><br>\n_AppLaunchpad is an android &#x26; ios screenshot generator to create customized App Store &#x26; Google Play images for your app…_theapplaunchpad.com</a><a href=\"https://theapplaunchpad.com/\"></a></p>\n<p>Seleccionas la plataforma</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*_BxMM_9g30xbHEw3eWqFJA.png\" alt=\"\"></p>\n<p>El template</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*oOjb9oHPUY5EII8Pc3eQYA.png\" alt=\"\"></p>\n<p>y por último subes tu captura de pantalla</p>\n<p>Luego de lo anterior sube tu apk y realiza distintas pruebas tienes distintos ambientes, lo recomendable es que realices varias pruebas internas antes de subir a producción puedes realizar pruebas abiertas y pruebas cerradas, verificar los dispositivos y los países en los que se distribuira tu aplicación, te deseo mucho éxito en tu camino a la publicación de tu nueva aplicación de flutter</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*bkHWUldwtq0EVHpLnIrRYQ.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*okt_cMHs1ltWGZs11Hd3Kg.png\" alt=\"\"></p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hernández</a> on <a href=\"https://medium.com/p/57b07092092c\">March 10, 2019</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/publicaci%C3%B3n-de-una-app-flutter-en-google-play-store-57b07092092c\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"Publicación de una app Flutter en google play store ","description":"","tags":["code","Flutter","Google Play"],"time":4,"featured":true,"timestamp":"2019-03-10T12:20:31-0300","filename":"2019-03-10_Publicaci-n-de-una-app-Flutter-en-google-play-store-57b07092092c"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2019-03-10_Publicaci-n-de-una-app-Flutter-en-google-play-store-57b07092092c.md";
				const url = "/blog/2019-03-10_Publicaci-n-de-una-app-Flutter-en-google-play-store-57b07092092c";
				function rawContent() {
					return "   \n                                        \n                                                             \n               \n                                        \n       \n              \n                                     \n                                                                                       \n   \n\nPublicación de una app Flutter en google play store\n===================================================\n\nHace un tiempo atrás compre una cuenta google play para publicar aplicaciones en la tienda de google play store, la finalidad al principio…\n\n* * *\n\n### Publicación de una app Flutter en google play store\n\n* * *\n\nHace un tiempo atrás compre una cuenta google play para publicar aplicaciones en la tienda de google play store, la finalidad al principio es poder tener mi propio portafolio de aplicaciones para posteriormente poder vender alguna de estas aplicaciones en la misma tienda.\n\nDentro de estos pasos de publicación lo primero que realice fue inscribir este cuenta que tiene un valor de 25 USD en la pagina oficial, para este primer paso puedes ir a leer un poco sobre publicación de aplicaciones en el sitio oficial de android y posteriormente abrir play console.\n\nTe dejo el link aquí: [https://developer.android.com/distribute/console/?hl=ES](https://developer.android.com/distribute/console/?hl=ES)\n\n![](https://cdn-images-1.medium.com/max/800/1*JdJSLckFwpVBvOdNMQBL_g.png)\n\nPagina oficial para el proceso de publicación en la tienda de google play store\n\nEn la tienda debes tener presente 3 factores importantes\n\nContar con una cuenta de correo gmail, tener una tarjeta de crédito para adquirir los derechos de publicación y leer todos los tips para poder tener la mejor experiencia de publicación.\n\n![](https://cdn-images-1.medium.com/max/800/1*UrXikJj0OqQXWTwEDV77bQ.png)\n\nGoogle play Console.\n\nUna vez realizado este paso lo que realice fue ir a la pagina oficial de flutter para poder verificar los pasos de publicación.\n\nEl link es el siguiente: [https://flutter.dev/docs/deployment/android](https://flutter.dev/docs/deployment/android)\n\n![](https://cdn-images-1.medium.com/max/800/1*wrxCK0-5emwaW8ax-VuYaw.png)\n\npagina oficial de flutter y su sección de despliegue en la tienda de google play store.\n\nUna buena alternativa (aunque se actualiza con un cierto desfase) es ingresar a la traducción realizada por la comunidad cuyo link seria el siguiente:\n\n[**Preparando para release una app Android**  \n_Durante el ciclo de desarrollo típico, probarás una aplicación usando \\`flutter run\\` en la línea de comando, los botones…_flutter-es.io](https://flutter-es.io/docs/deployment/android \"https://flutter-es.io/docs/deployment/android\")[](https://flutter-es.io/docs/deployment/android)\n\n![](https://cdn-images-1.medium.com/max/800/1*nSo4hPS2vArZztwOGe-R5A.png)\n\ntraducción realizada por la comunidad\n\nCabe mencionar que este proyecto de traducción es un gran aporte al cual podrías integrarte sin ningún problema bifucardo su proyecto y apoyando en la traducción, la comunidad te lo agradecería mucho.\n\nLink\n\n[**Flutter ES**  \n_Comunidad de desarrolladores de Flutter de habla hispana. - Flutter ES_github.com](https://github.com/flutter-es \"https://github.com/flutter-es\")[](https://github.com/flutter-es)\n\nEntonces para esta demostración ocupare una aplicación que lo único que realiza es la conversión de monedas de un país en otro la cual pueden revisarla del siguiente repositorio:\n\n[**devjaime/FlutterConversor**  \n_Simple conversor de monedas para mostrar publicación en la google play store - devjaime/FlutterConversor_github.com](https://github.com/devjaime/FlutterConversor \"https://github.com/devjaime/FlutterConversor\")[](https://github.com/devjaime/FlutterConversor)\n\nEntonces el primer paso segun la guia oficial de flutter es revisar App Manifest de Android el cual se encuentra en esta dirección <app dir>/android/app/src/main\n\nDe este apartado dado que nuestra aplicación se conecta a un api obtiene los datos del valor de cada moneda desde internet dejaremos activo el permiso correspondiente a este, si su app no se conecta a internet no es necesario que activen este permiso.\n\n![](https://cdn-images-1.medium.com/max/800/1*95Fm22DcfHZVvN7Cctjp3w.png)\n\nPaso 1 sección en la que nos encontramos\n\n![](https://cdn-images-1.medium.com/max/800/1*_ZCz5Csn8-fw7chKYjhfIw.png)\n\nRuta y descripción donde se encuentran los campos a cambiar.\n\nRevisando la configuración de compilación\n\n![](https://cdn-images-1.medium.com/max/800/1*QgYB2JSSCL9x-IvzQxthww.png)\n\nRevisión de la ruta de configuración\n\nEste archivo al principio me costo identificarlo ya que existen varios del mismo nombre por lo cual creo que una captura de pantalla de la aplicación y ver en que lugar se encuentra aclarara esto.\n\n![](https://cdn-images-1.medium.com/max/800/1*F0rSLiShkOS1mUghtpqXng.png)\n\nCaptura de pantalla para identificar donde se encuentran los valores anteriormente descritos.\n\n### Añadiendo un icono para el Launcher\n\n![](https://cdn-images-1.medium.com/max/800/1*LzJC9ukRiKH6BNSXZ5Y1dQ.png)\n\nLos distintos iconos que van a aparecer en nuestra app siempre son un tema (ya que existen distintas medidas el como generarlos y donde colocarlos)\n\nPara los que no saben de que se trata esto les dejo una captura de pantalla:\n\n![](https://cdn-images-1.medium.com/max/800/1*OWgVOr1ADxblrHauveOpgw.png)\n\ncaptura de pantalla realizada desde la extensión vysor [https://www.vysor.io/](https://www.vysor.io/)\n\nPara la generación de los distintos tamaños de estos iconos tenemos varias formas de realizarlo, la que mas aconsejo yo (debido a que no soy un diseñador gráfico) es ocupar un programa que haga el trabajo por nosotros\n\n[**App Icon Generator**  \n_Generate icons and images for mobile apps, android and iOS. No need to upload or download. Works on your browser_appicon.co](https://appicon.co/ \"https://appicon.co/\")[](https://appicon.co/)\n\nCon este generador de iconos solo debemos pegar una imagen con la sufiente densidad (densidad mas alta) y generara todos los iconos necesarios).\n\nAhora simplemente debemos copiar y reemplazar los iconos y carpetas generadas a nuestra carpeta de assets generados.\n\n![](https://cdn-images-1.medium.com/max/800/1*GaiHw8GY6BpCKUItTRMA-w.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*c41V-T6DQhJ9Lru34HsyzA.png)\n\nRuta donde se deben copiar y reemplazar los iconos\n\nFirmado de la app\n\n![](https://cdn-images-1.medium.com/max/800/1*70enG2ea54XpKrKdlBqIHg.png)\n\nEl firmado de la app fue una de las cosas que más me costo entender y existen varios vídeos y tutoriales de cual es la mejor forma de realizarlo y todas son distintas, por lo cual lo que intente fue realizar la forma más simple posible.\n\nLo primero que realice fue ejecutar flutter doctor -v en la terminal para ver donde estaba instalado el jdk de java que ejecuta flutter:\n\n![](https://cdn-images-1.medium.com/max/800/1*xEYfgD9gtW_uauXJB3I_LQ.png)\n\nruta donde se encuentra el java binary at\n\nSi se van al explorador encontraran una ruta como la siguiente\n\n![](https://cdn-images-1.medium.com/max/800/1*dSgdgEaucWTJRb_w7F1deg.png)\n\nEl explorador de windows mostrara la siguiente ruta\n\nEntonces desde la ventana cmd me muevo a la misma ruta\n\nNota importante deben abrir la ventana cmd en modo administrador\n\n![](https://cdn-images-1.medium.com/max/800/1*N2P01JleA3NYmUGDLmEf7w.png)\n\ncmd debe ser abierto como administrador\n\n![](https://cdn-images-1.medium.com/max/800/1*4or2OCSZxXWMKaoXLPrSKA.png)\n\ncon cd seguido de la ruta donde se encuentra jre te mueves al directorio para ejecutar el comando\n\nLuego de lo anterior pegas el comando siguiente:\n\nkeytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key\n\nen mi derivación de este comando para windows lo que realice fue cambiar la ruta “~/key.jks” a “c:\\\\key.jks” también podrías cambiar el alias o el nombre del archivo si lo deseas.\n\ncomo se muestra a continuación.\n\nkeytool -genkey -v -keystore c:\\\\keyapp.jks -keyalg RSA -keysize 2048 -validity 10000 -alias keyapp\n\nla razón por la que dejo el archivo en la raiz de c: es solo como demostración\n\n![](https://cdn-images-1.medium.com/max/800/1*AueF2x5P96P0J232dXZI2g.png)\n\ny en esta ejecuto el comando anteriormente descrito\n\nal presionar enter se te ira preguntando los datos necesarios para identificar la clave de publicación\n\n![](https://cdn-images-1.medium.com/max/800/1*8jd0X7Da1oCP6CMkUQIsAQ.png)\n\nDebes ingresar todos los datos solicitados y al finalizar dependiendo en que idioma se encuentre tu sistema operativo dar S=SI o Y=Yes\n\n![](https://cdn-images-1.medium.com/max/800/1*ajUPaeawYcPG1YnFK5-kmA.png)\n\nAl presionar enter te pedirá confirmar si ocuparas la misma clave de almacén en mi caso recomiendo presionar INTRO para ocupar la misma.\n\n![](https://cdn-images-1.medium.com/max/800/1*-NweF4-BglRVQAybBfRAfQ.png)\n\nSi todo sale bien tus claves fueron generadas exitosamente en el path que otorgaste.\n\n![](https://cdn-images-1.medium.com/max/800/1*bEnOUHQl7kZl9L2tHJHtCw.png)\n\nReferencia al keyStore desde la app\n\n![](https://cdn-images-1.medium.com/max/800/1*yLDDGTQHvtOx2__tvQEzag.png)\n\nUna vez creado el archivo, debes generar una referencia desde la app para esto debes ir al directorio de la aplicación y modificar el archivo key.properties\n\n![](https://cdn-images-1.medium.com/max/800/1*qeDy992JQTYQowCwaIsnmg.png)\n\ningresa los datos anteriormente puestos como son las password el keyalias y la ruta donde se encuentra el archivo.\n\nConfigurar la firma en Gradle\n\n![](https://cdn-images-1.medium.com/max/800/1*pRxGjCCr-LYDBOm9iR0q2w.png)\n\nTal como aparece en la gua oficial solo debes reemplazar la información del archivo por la descrita en este apartado quedando de la siguiente forma.\n\n![](https://cdn-images-1.medium.com/max/800/1*9Zg-oJyXZJrDTRmeb8d-Vw.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*WMoVdHX0Cn6mixv8sLTqdA.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*qm7ufdRaFO3Pfe-3xrt8FA.png)\n\nPara construir la release debes ejecutar el comando tal como aparece y verificar la salida de este\n\n![](https://cdn-images-1.medium.com/max/800/1*8I6GBnBHfnX8TKVwK6et7w.png)\n\nDesde la consola de visual studio code puedes realizar la tarea de generación del apk\n\nluego de ejecutar flutter build apk\n\ndebes ejecutar el comando flutter install si quieres instalar y probar tu aplicación\n\n![](https://cdn-images-1.medium.com/max/800/1*DsaDi0hnbqGq1i6g-oa_Jw.png)\n\nen este caso la instalo directamente en el dispositivo de prueba.\n\nAhora solo nos queda publicar nuestra app con google play console\n\nRecomiendo crear la ficha de play store y completar los datos correspondientes\n\n![](https://cdn-images-1.medium.com/max/800/1*Oi1vpZrXhgBb1kXVFdlqeg.png)\n\nCrear los iconos e imágenes\n\n![](https://cdn-images-1.medium.com/max/800/1*d55zW2MlVaosURDj5vTJRg.png)\n\nPara crear las imágenes recomiendo este link en donde a traces de una captura de pantalla puedes generar los distintos iconos de la aplicación para visualizarlos en la tienda.\n\n[**App Screenshot Generator for App Store & Google Play**  \n_AppLaunchpad is an android & ios screenshot generator to create customized App Store & Google Play images for your app…_theapplaunchpad.com](https://theapplaunchpad.com/ \"https://theapplaunchpad.com/\")[](https://theapplaunchpad.com/)\n\nSeleccionas la plataforma\n\n![](https://cdn-images-1.medium.com/max/800/1*_BxMM_9g30xbHEw3eWqFJA.png)\n\nEl template\n\n![](https://cdn-images-1.medium.com/max/800/1*oOjb9oHPUY5EII8Pc3eQYA.png)\n\ny por último subes tu captura de pantalla\n\nLuego de lo anterior sube tu apk y realiza distintas pruebas tienes distintos ambientes, lo recomendable es que realices varias pruebas internas antes de subir a producción puedes realizar pruebas abiertas y pruebas cerradas, verificar los dispositivos y los países en los que se distribuira tu aplicación, te deseo mucho éxito en tu camino a la publicación de tu nueva aplicación de flutter\n\n![](https://cdn-images-1.medium.com/max/800/1*bkHWUldwtq0EVHpLnIrRYQ.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*okt_cMHs1ltWGZs11Hd3Kg.png)\n\nBy [Jaime Hernández](https://medium.com/@devjaime) on [March 10, 2019](https://medium.com/p/57b07092092c).\n\n[Canonical link](https://medium.com/@devjaime/publicaci%C3%B3n-de-una-app-flutter-en-google-play-store-57b07092092c)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"publicación-de-una-app-flutter-en-google-play-store","text":"Publicación de una app Flutter en google play store"},{"depth":3,"slug":"publicación-de-una-app-flutter-en-google-playstore","text":"Publicación de una app Flutter en google play store"},{"depth":3,"slug":"añadiendo-un-icono-para-ellauncher","text":"Añadiendo un icono para el Launcher"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$ProjectLayout } from './ProjectLayout_DBW4xXT4.mjs';

const html = () => "<h2 id=\"the-details\">The Details</h2>\n<p>Arquitectura serverless completa implementada en Microsoft Azure, demostrando las mejores prácticas para aplicaciones cloud-native. El proyecto incluye Azure Functions, Cosmos DB, API Management y pipelines de CI/CD automatizados.</p>\n<h2 id=\"core-technologies\">Core Technologies</h2>\n<h3 id=\"azure-services\">Azure Services</h3>\n<ul>\n<li>⚡ <strong>Azure Functions</strong> → Compute serverless y event-driven</li>\n<li>🗄️ <strong>Azure Cosmos DB</strong> → Base de datos NoSQL distribuida</li>\n<li>🌐 <strong>API Management</strong> → Gateway y gestión de APIs</li>\n<li>📊 <strong>Application Insights</strong> → Monitoreo y observabilidad</li>\n<li>🔐 <strong>Azure AD</strong> → Autenticación y autorización</li>\n<li>📦 <strong>Azure Storage</strong> → Almacenamiento de archivos y blobs</li>\n</ul>\n<h3 id=\"development-stack\">Development Stack</h3>\n<ul>\n<li>🎯 <strong>C# .NET 6</strong> → Lenguaje principal para Functions</li>\n<li>🔧 <strong>Azure CLI</strong> → Automatización y scripting</li>\n<li>🐳 <strong>Docker</strong> → Containerización para desarrollo</li>\n<li>🚀 <strong>ARM Templates</strong> → Infrastructure as Code</li>\n<li>📊 <strong>PowerBI</strong> → Dashboards y reportes</li>\n</ul>\n<h2 id=\"the-architecture\">The Architecture</h2>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>Client Apps → API Management → Azure Functions → Cosmos DB</span></span>\n<span class=\"line\"><span>     ↓              ↓              ↓              ↓</span></span>\n<span class=\"line\"><span>   Mobile/Web → Rate Limiting → Business Logic → Data Layer</span></span>\n<span class=\"line\"><span>     ↓              ↓              ↓              ↓</span></span>\n<span class=\"line\"><span>  Authentication → Monitoring → Event Triggers → Replication</span></span></code></pre>\n<h2 id=\"key-features\">Key Features</h2>\n<ul>\n<li>🔄 <strong>Event-Driven</strong> → Triggers automáticos basados en eventos</li>\n<li>🌍 <strong>Global Scale</strong> → Distribución multi-región</li>\n<li>💰 <strong>Cost Optimized</strong> → Pago por uso, sin infraestructura fija</li>\n<li>🛡️ <strong>Security First</strong> → Implementación de zero-trust</li>\n<li>📈 <strong>Auto-Scaling</strong> → Escalamiento automático bajo demanda</li>\n<li>🔍 <strong>Monitoring</strong> → Observabilidad completa con alertas</li>\n</ul>\n<h2 id=\"azure-functions-implementation\">Azure Functions Implementation</h2>\n<h3 id=\"http-triggered-function\">HTTP Triggered Function</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"csharp\"><code><span class=\"line\"><span style=\"color:#E1E4E8\">[</span><span style=\"color:#B392F0\">FunctionName</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"GetUserData\"</span><span style=\"color:#E1E4E8\">)]</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">public</span><span style=\"color:#F97583\"> static</span><span style=\"color:#F97583\"> async</span><span style=\"color:#B392F0\"> Task</span><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#B392F0\">IActionResult</span><span style=\"color:#E1E4E8\">> </span><span style=\"color:#B392F0\">GetUserData</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    [</span><span style=\"color:#B392F0\">HttpTrigger</span><span style=\"color:#E1E4E8\">(AuthorizationLevel.Function, </span><span style=\"color:#9ECBFF\">\"get\"</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#B392F0\">Route</span><span style=\"color:#F97583\"> =</span><span style=\"color:#9ECBFF\"> \"users/{id}\"</span><span style=\"color:#E1E4E8\">)] </span><span style=\"color:#B392F0\">HttpRequest</span><span style=\"color:#B392F0\"> req</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    string</span><span style=\"color:#B392F0\"> id</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    [</span><span style=\"color:#B392F0\">CosmosDB</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">ConnectionStringSetting</span><span style=\"color:#F97583\"> =</span><span style=\"color:#9ECBFF\"> \"CosmosDbConnection\"</span><span style=\"color:#E1E4E8\">)] </span><span style=\"color:#B392F0\">DocumentClient</span><span style=\"color:#B392F0\"> client</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">    ILogger</span><span style=\"color:#B392F0\"> log</span><span style=\"color:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    log.</span><span style=\"color:#B392F0\">LogInformation</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">$\"Getting user data for ID: {</span><span style=\"color:#E1E4E8\">id</span><span style=\"color:#9ECBFF\">}\"</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    try</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        var</span><span style=\"color:#B392F0\"> user</span><span style=\"color:#F97583\"> =</span><span style=\"color:#F97583\"> await</span><span style=\"color:#E1E4E8\"> client.</span><span style=\"color:#B392F0\">ReadDocumentAsync</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            UriFactory.</span><span style=\"color:#B392F0\">CreateDocumentUri</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"UserDatabase\"</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">\"Users\"</span><span style=\"color:#E1E4E8\">, id));</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        return</span><span style=\"color:#F97583\"> new</span><span style=\"color:#B392F0\"> OkObjectResult</span><span style=\"color:#E1E4E8\">(user.Resource);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    catch</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#B392F0\">DocumentClientException</span><span style=\"color:#B392F0\"> ex</span><span style=\"color:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        log.</span><span style=\"color:#B392F0\">LogError</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">$\"Error retrieving user: {</span><span style=\"color:#E1E4E8\">ex</span><span style=\"color:#9ECBFF\">.</span><span style=\"color:#E1E4E8\">Message</span><span style=\"color:#9ECBFF\">}\"</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        return</span><span style=\"color:#F97583\"> new</span><span style=\"color:#B392F0\"> NotFoundResult</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h3 id=\"timer-triggered-function\">Timer Triggered Function</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"csharp\"><code><span class=\"line\"><span style=\"color:#E1E4E8\">[</span><span style=\"color:#B392F0\">FunctionName</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"DataCleanupJob\"</span><span style=\"color:#E1E4E8\">)]</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">public</span><span style=\"color:#F97583\"> static</span><span style=\"color:#F97583\"> async</span><span style=\"color:#B392F0\"> Task</span><span style=\"color:#B392F0\"> DataCleanupJob</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    [</span><span style=\"color:#B392F0\">TimerTrigger</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"0 0 2 * * *\"</span><span style=\"color:#E1E4E8\">)] </span><span style=\"color:#B392F0\">TimerInfo</span><span style=\"color:#B392F0\"> timer</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    [</span><span style=\"color:#B392F0\">CosmosDB</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">ConnectionStringSetting</span><span style=\"color:#F97583\"> =</span><span style=\"color:#9ECBFF\"> \"CosmosDbConnection\"</span><span style=\"color:#E1E4E8\">)] </span><span style=\"color:#B392F0\">DocumentClient</span><span style=\"color:#B392F0\"> client</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">    ILogger</span><span style=\"color:#B392F0\"> log</span><span style=\"color:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    log.</span><span style=\"color:#B392F0\">LogInformation</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"Starting daily data cleanup job\"</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    var</span><span style=\"color:#B392F0\"> cutoffDate</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> DateTime.UtcNow.</span><span style=\"color:#B392F0\">AddDays</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#F97583\">-</span><span style=\"color:#79B8FF\">30</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    var</span><span style=\"color:#B392F0\"> query</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> client.</span><span style=\"color:#B392F0\">CreateDocumentQuery</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        UriFactory.</span><span style=\"color:#B392F0\">CreateDocumentCollectionUri</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"Database\"</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">\"Collection\"</span><span style=\"color:#E1E4E8\">))</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        .</span><span style=\"color:#B392F0\">Where</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">d</span><span style=\"color:#F97583\"> =></span><span style=\"color:#E1E4E8\"> d.Timestamp </span><span style=\"color:#F97583\">&#x3C;</span><span style=\"color:#E1E4E8\"> cutoffDate);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // Cleanup logic here</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    log.</span><span style=\"color:#B392F0\">LogInformation</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"Data cleanup completed\"</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h2 id=\"infrastructure-as-code\">Infrastructure as Code</h2>\n<h3 id=\"arm-template-example\">ARM Template Example</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"json\"><code><span class=\"line\"><span style=\"color:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  \"type\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"Microsoft.Web/sites\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  \"apiVersion\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"2021-02-01\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  \"name\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"[parameters('functionAppName')]\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  \"location\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"[parameters('location')]\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  \"kind\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"functionapp\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  \"properties\"</span><span style=\"color:#E1E4E8\">: {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    \"serverFarmId\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    \"siteConfig\"</span><span style=\"color:#E1E4E8\">: {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">      \"appSettings\"</span><span style=\"color:#E1E4E8\">: [</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">          \"name\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"FUNCTIONS_EXTENSION_VERSION\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">          \"value\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"~4\"</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">          \"name\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"FUNCTIONS_WORKER_RUNTIME\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">          \"value\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"dotnet\"</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      ]</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h2 id=\"performance-metrics\">Performance Metrics</h2>\n<ul>\n<li>⚡ <strong>Cold Start</strong>: &#x3C; 2 segundos promedio</li>\n<li>🔄 <strong>Throughput</strong>: 10,000+ requests/minuto</li>\n<li>💰 <strong>Cost Efficiency</strong>: 70% reducción vs VM tradicionales</li>\n<li>🌍 <strong>Availability</strong>: 99.9% uptime SLA</li>\n<li>📊 <strong>Latency</strong>: &#x3C; 200ms P95 response time</li>\n</ul>\n<h2 id=\"devops-pipeline\">DevOps Pipeline</h2>\n<h3 id=\"cicd-with-azure-devops\">CI/CD with Azure DevOps</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\"><code><span class=\"line\"><span style=\"color:#85E89D\">trigger</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  branches</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">    include</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#9ECBFF\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#85E89D\">pool</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  vmImage</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'ubuntu-latest'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#85E89D\">stages</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">- </span><span style=\"color:#85E89D\">stage</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">Build</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  jobs</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  - </span><span style=\"color:#85E89D\">job</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">BuildFunctions</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">    steps</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#85E89D\">task</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">DotNetCoreCLI@2</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">      displayName</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'Build Functions'</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">      inputs</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">        command</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'build'</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">        projects</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'**/*.csproj'</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        </span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">- </span><span style=\"color:#85E89D\">stage</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">Deploy</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  jobs</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  - </span><span style=\"color:#85E89D\">deployment</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">DeployToAzure</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">    environment</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'production'</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">    strategy</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">      runOnce</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">        deploy</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">          steps</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">          - </span><span style=\"color:#85E89D\">task</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">AzureFunctionApp@1</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">            displayName</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'Deploy Azure Functions'</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">            inputs</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">              azureSubscription</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'AzureServiceConnection'</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">              appType</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'functionApp'</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">              appName</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">'$(functionAppName)'</span></span></code></pre>\n<h2 id=\"monitoring--observability\">Monitoring &#x26; Observability</h2>\n<ul>\n<li>📊 <strong>Application Insights</strong> → Telemetría y métricas</li>\n<li>🔍 <strong>Azure Monitor</strong> → Alertas y dashboards</li>\n<li>📈 <strong>Custom Metrics</strong> → KPIs específicos del negocio</li>\n<li>🚨 <strong>Alerting</strong> → Notificaciones proactivas</li>\n<li>📋 <strong>Logging</strong> → Structured logging con correlación</li>\n</ul>\n<h2 id=\"security-implementation\">Security Implementation</h2>\n<ul>\n<li>🔐 <strong>Azure AD Integration</strong> → Single Sign-On</li>\n<li>🛡️ <strong>API Keys Management</strong> → Rotación automática</li>\n<li>🌐 <strong>Network Security</strong> → VNet integration</li>\n<li>🔒 <strong>Data Encryption</strong> → En tránsito y reposo</li>\n<li>📜 <strong>Compliance</strong> → SOC 2, ISO 27001</li>\n</ul>\n<h2 id=\"cost-optimization\">Cost Optimization</h2>\n<ul>\n<li>💰 <strong>Consumption Plan</strong> → Pago por ejecución</li>\n<li>📊 <strong>Usage Analytics</strong> → Monitoreo de costos</li>\n<li>⚡ <strong>Optimization</strong> → Técnicas de performance</li>\n<li>🔄 <strong>Resource Scaling</strong> → Auto-scaling inteligente</li>\n</ul>\n<h2 id=\"the-future\">The Future</h2>\n<ul>\n<li>🤖 <strong>AI Integration</strong> → Cognitive Services</li>\n<li>📱 <strong>Mobile Backend</strong> → Xamarin/MAUI support</li>\n<li>🌐 <strong>Multi-Cloud</strong> → Hybrid cloud scenarios</li>\n<li>🔗 <strong>Microservices</strong> → Service mesh implementation</li>\n<li>📊 <strong>Advanced Analytics</strong> → Machine learning integration</li>\n</ul>\n<h2 id=\"real-world-impact\">Real-World Impact</h2>\n<ul>\n<li>🏢 <strong>Enterprise Ready</strong> → Utilizado en producción</li>\n<li>👥 <strong>Team Collaboration</strong> → Herramientas de desarrollo</li>\n<li>📈 <strong>Business Value</strong> → ROI medible</li>\n<li>🌟 <strong>Best Practices</strong> → Patrón para otros proyectos</li>\n</ul>\n<p>#️⃣ <strong>#Azure #Serverless #CloudNative #AzureFunctions #CosmosDB #DevOps #CSharp #CloudComputing</strong></p>";

				const frontmatter = {"layout":"../../layouts/ProjectLayout.astro","title":"Azure Serverless Architecture - Cloud-Native Solutions","description":"Comprehensive serverless architecture built on Microsoft Azure, featuring Azure Functions, Cosmos DB, and modern cloud-native patterns.","tags":["Azure","Serverless","Cloud","Functions","CosmosDB","DevOps","C#"],"githubUrl":"https://github.com/devjaime/azure-serverless-architecture","timestamp":"2025-01-05T11:00:00.000Z","featured":true,"filename":"azure-serverless-architecture"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/projects/azure-serverless-architecture.md";
				const url = "/projects/azure-serverless-architecture";
				function rawContent() {
					return "   \n                                         \n                                                             \n                                                                                                                                                    \n                                                                               \n                                                                    \n                                    \n              \n                                       \n   \n\n## The Details\n\nArquitectura serverless completa implementada en Microsoft Azure, demostrando las mejores prácticas para aplicaciones cloud-native. El proyecto incluye Azure Functions, Cosmos DB, API Management y pipelines de CI/CD automatizados.\n\n## Core Technologies\n\n### Azure Services\n* ⚡ **Azure Functions** → Compute serverless y event-driven\n* 🗄️ **Azure Cosmos DB** → Base de datos NoSQL distribuida\n* 🌐 **API Management** → Gateway y gestión de APIs\n* 📊 **Application Insights** → Monitoreo y observabilidad\n* 🔐 **Azure AD** → Autenticación y autorización\n* 📦 **Azure Storage** → Almacenamiento de archivos y blobs\n\n### Development Stack\n* 🎯 **C# .NET 6** → Lenguaje principal para Functions\n* 🔧 **Azure CLI** → Automatización y scripting\n* 🐳 **Docker** → Containerización para desarrollo\n* 🚀 **ARM Templates** → Infrastructure as Code\n* 📊 **PowerBI** → Dashboards y reportes\n\n## The Architecture\n\n```\nClient Apps → API Management → Azure Functions → Cosmos DB\n     ↓              ↓              ↓              ↓\n   Mobile/Web → Rate Limiting → Business Logic → Data Layer\n     ↓              ↓              ↓              ↓\n  Authentication → Monitoring → Event Triggers → Replication\n```\n\n## Key Features\n\n* 🔄 **Event-Driven** → Triggers automáticos basados en eventos\n* 🌍 **Global Scale** → Distribución multi-región\n* 💰 **Cost Optimized** → Pago por uso, sin infraestructura fija\n* 🛡️ **Security First** → Implementación de zero-trust\n* 📈 **Auto-Scaling** → Escalamiento automático bajo demanda\n* 🔍 **Monitoring** → Observabilidad completa con alertas\n\n## Azure Functions Implementation\n\n### HTTP Triggered Function\n```csharp\n[FunctionName(\"GetUserData\")]\npublic static async Task<IActionResult> GetUserData(\n    [HttpTrigger(AuthorizationLevel.Function, \"get\", Route = \"users/{id}\")] HttpRequest req,\n    string id,\n    [CosmosDB(ConnectionStringSetting = \"CosmosDbConnection\")] DocumentClient client,\n    ILogger log)\n{\n    log.LogInformation($\"Getting user data for ID: {id}\");\n    \n    try\n    {\n        var user = await client.ReadDocumentAsync(\n            UriFactory.CreateDocumentUri(\"UserDatabase\", \"Users\", id));\n        return new OkObjectResult(user.Resource);\n    }\n    catch (DocumentClientException ex)\n    {\n        log.LogError($\"Error retrieving user: {ex.Message}\");\n        return new NotFoundResult();\n    }\n}\n```\n\n### Timer Triggered Function\n```csharp\n[FunctionName(\"DataCleanupJob\")]\npublic static async Task DataCleanupJob(\n    [TimerTrigger(\"0 0 2 * * *\")] TimerInfo timer,\n    [CosmosDB(ConnectionStringSetting = \"CosmosDbConnection\")] DocumentClient client,\n    ILogger log)\n{\n    log.LogInformation(\"Starting daily data cleanup job\");\n    \n    var cutoffDate = DateTime.UtcNow.AddDays(-30);\n    var query = client.CreateDocumentQuery(\n        UriFactory.CreateDocumentCollectionUri(\"Database\", \"Collection\"))\n        .Where(d => d.Timestamp < cutoffDate);\n    \n    // Cleanup logic here\n    log.LogInformation(\"Data cleanup completed\");\n}\n```\n\n## Infrastructure as Code\n\n### ARM Template Example\n```json\n{\n  \"type\": \"Microsoft.Web/sites\",\n  \"apiVersion\": \"2021-02-01\",\n  \"name\": \"[parameters('functionAppName')]\",\n  \"location\": \"[parameters('location')]\",\n  \"kind\": \"functionapp\",\n  \"properties\": {\n    \"serverFarmId\": \"[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]\",\n    \"siteConfig\": {\n      \"appSettings\": [\n        {\n          \"name\": \"FUNCTIONS_EXTENSION_VERSION\",\n          \"value\": \"~4\"\n        },\n        {\n          \"name\": \"FUNCTIONS_WORKER_RUNTIME\",\n          \"value\": \"dotnet\"\n        }\n      ]\n    }\n  }\n}\n```\n\n## Performance Metrics\n\n* ⚡ **Cold Start**: < 2 segundos promedio\n* 🔄 **Throughput**: 10,000+ requests/minuto\n* 💰 **Cost Efficiency**: 70% reducción vs VM tradicionales\n* 🌍 **Availability**: 99.9% uptime SLA\n* 📊 **Latency**: < 200ms P95 response time\n\n## DevOps Pipeline\n\n### CI/CD with Azure DevOps\n```yaml\ntrigger:\n  branches:\n    include:\n    - main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Build\n  jobs:\n  - job: BuildFunctions\n    steps:\n    - task: DotNetCoreCLI@2\n      displayName: 'Build Functions'\n      inputs:\n        command: 'build'\n        projects: '**/*.csproj'\n        \n- stage: Deploy\n  jobs:\n  - deployment: DeployToAzure\n    environment: 'production'\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: AzureFunctionApp@1\n            displayName: 'Deploy Azure Functions'\n            inputs:\n              azureSubscription: 'AzureServiceConnection'\n              appType: 'functionApp'\n              appName: '$(functionAppName)'\n```\n\n## Monitoring & Observability\n\n* 📊 **Application Insights** → Telemetría y métricas\n* 🔍 **Azure Monitor** → Alertas y dashboards\n* 📈 **Custom Metrics** → KPIs específicos del negocio\n* 🚨 **Alerting** → Notificaciones proactivas\n* 📋 **Logging** → Structured logging con correlación\n\n## Security Implementation\n\n* 🔐 **Azure AD Integration** → Single Sign-On\n* 🛡️ **API Keys Management** → Rotación automática\n* 🌐 **Network Security** → VNet integration\n* 🔒 **Data Encryption** → En tránsito y reposo\n* 📜 **Compliance** → SOC 2, ISO 27001\n\n## Cost Optimization\n\n* 💰 **Consumption Plan** → Pago por ejecución\n* 📊 **Usage Analytics** → Monitoreo de costos\n* ⚡ **Optimization** → Técnicas de performance\n* 🔄 **Resource Scaling** → Auto-scaling inteligente\n\n## The Future\n\n* 🤖 **AI Integration** → Cognitive Services\n* 📱 **Mobile Backend** → Xamarin/MAUI support\n* 🌐 **Multi-Cloud** → Hybrid cloud scenarios\n* 🔗 **Microservices** → Service mesh implementation\n* 📊 **Advanced Analytics** → Machine learning integration\n\n## Real-World Impact\n\n* 🏢 **Enterprise Ready** → Utilizado en producción\n* 👥 **Team Collaboration** → Herramientas de desarrollo\n* 📈 **Business Value** → ROI medible\n* 🌟 **Best Practices** → Patrón para otros proyectos\n\n#️⃣ **#Azure #Serverless #CloudNative #AzureFunctions #CosmosDB #DevOps #CSharp #CloudComputing**\n";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":2,"slug":"the-details","text":"The Details"},{"depth":2,"slug":"core-technologies","text":"Core Technologies"},{"depth":3,"slug":"azure-services","text":"Azure Services"},{"depth":3,"slug":"development-stack","text":"Development Stack"},{"depth":2,"slug":"the-architecture","text":"The Architecture"},{"depth":2,"slug":"key-features","text":"Key Features"},{"depth":2,"slug":"azure-functions-implementation","text":"Azure Functions Implementation"},{"depth":3,"slug":"http-triggered-function","text":"HTTP Triggered Function"},{"depth":3,"slug":"timer-triggered-function","text":"Timer Triggered Function"},{"depth":2,"slug":"infrastructure-as-code","text":"Infrastructure as Code"},{"depth":3,"slug":"arm-template-example","text":"ARM Template Example"},{"depth":2,"slug":"performance-metrics","text":"Performance Metrics"},{"depth":2,"slug":"devops-pipeline","text":"DevOps Pipeline"},{"depth":3,"slug":"cicd-with-azure-devops","text":"CI/CD with Azure DevOps"},{"depth":2,"slug":"monitoring--observability","text":"Monitoring & Observability"},{"depth":2,"slug":"security-implementation","text":"Security Implementation"},{"depth":2,"slug":"cost-optimization","text":"Cost Optimization"},{"depth":2,"slug":"the-future","text":"The Future"},{"depth":2,"slug":"real-world-impact","text":"Real-World Impact"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$ProjectLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

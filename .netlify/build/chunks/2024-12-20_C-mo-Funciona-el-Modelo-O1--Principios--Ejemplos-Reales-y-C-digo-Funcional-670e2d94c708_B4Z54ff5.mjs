/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"c√≥mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c√≥digo-funcional\">C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional</h1>\n<p>C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional</p>\n<hr>\n<h3 id=\"c√≥mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c√≥digo-funcional-1\">C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*URToiWO3AO7yamdVXN-rcg.png\" alt=\"\"></p>\n<p><a href=\"https://www.howtouselinux.com/post/how-the-openai-o1-model-stands-out-heres-what-we-discovered\">https://www.howtouselinux.com/post/how-the-openai-o1-model-stands-out-heres-what-we-discovered</a></p>\n<h3 id=\"c√≥mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c√≥digo-funcional-2\">C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional</h3>\n<p>La inteligencia artificial est√° revolucionando m√∫ltiples industrias gracias a modelos avanzados como <strong>O1</strong>. Este modelo ofrece respuestas claras, precisas y contextualizadas mediante t√©cnicas de <em>prompting</em> efectivas. A continuaci√≥n, exploraremos los principios de dise√±o del modelo, ejemplos pr√°cticos, y c√≥mo puedes empezar a trabajar con √©l, incluyendo c√≥digo funcional y enlaces a documentaci√≥n relevante.</p>\n<hr>\n<h3 id=\"principios-fundamentales-del-modeloo1\">Principios Fundamentales del Modelo¬†O1</h3>\n<p>El modelo <strong>O1</strong> sigue una serie de principios para optimizar su desempe√±o y garantizar resultados confiables:</p>\n<ol>\n<li><strong>Simplicidad y Directo al Punto</strong><br>\n¬†Evitar indicaciones extensas o razonamientos expl√≠citos (<em>Chain of Thought</em> o CoT), para aprovechar el razonamiento interno del modelo y evitar respuestas redundantes o confusas.</li>\n<li><strong>Estructuras Consistentes</strong><br>\n¬†Utilizar formatos como JSON, XML o Markdown para estructurar las solicitudes y garantizar salidas uniformes, especialmente √∫tiles para procesos automatizados.</li>\n<li><strong>Ejemplos Contextuales</strong><br>\n¬†Incorporar ejemplos simples (<em>few-shot prompting</em>) para proporcionar un marco claro y efectivo al modelo.</li>\n</ol>\n<p>En cada caso, el modelo genera respuestas optimizadas siguiendo estos principios.</p>\n<hr>\n<h3 id=\"ejemplo-1-generar-smiles-ids-para-mol√©culas\">Ejemplo 1: Generar SMILES IDs para Mol√©culas</h3>\n<p>Este ejemplo muestra c√≥mo dise√±ar un <em>prompt</em> efectivo para obtener identificadores moleculares (SMILES).</p>\n<h3 id=\"c√≥digo-funcional\">C√≥digo Funcional</h3>\n<p># Importar bibliotecas necesarias<br>\nfrom openai import OpenAI</p>\n<p># Configurar la API key<br>\nopenai_api_key = ‚ÄúTU_API_KEY‚Äù<br>\nclient = OpenAI(api_key=openai_api_key)<br>\n# Definir el prompt<br>\ngood_prompt = \"\"\"<br>\nEres un qu√≠mico computacional. Genera una funci√≥n en Python que obtenga los SMILES IDs<br>\npara todas las mol√©culas relacionadas con la insulina.<br>\n\"\"\"<br>\n# Hacer la solicitud al modelo<br>\nresponse = client.chat.completions.create(<br>\nmodel=‚Äúo1-mini‚Äù,<br>\nmessages=[{‚Äúrole‚Äù: ‚Äúuser‚Äù, ‚Äúcontent‚Äù: good_prompt}]<br>\n)<br>\n# Mostrar la respuesta<br>\nprint(response.choices[0].message.content)</p>\n<h3 id=\"salida\">Salida</h3>\n<p>El modelo genera un c√≥digo funcional para extraer los SMILES IDs. Puedes adaptarlo f√°cilmente a tus necesidades.</p>\n<hr>\n<h3 id=\"ejemplo-2-atenci√≥n-al-cliente-conxml\">Ejemplo 2: Atenci√≥n al Cliente con¬†XML</h3>\n<p>Este ejemplo demuestra c√≥mo utilizar un formato estructurado para mejorar las respuestas del modelo en escenarios de atenci√≥n al cliente.</p>\n<h3 id=\"c√≥digo-funcional-1\">C√≥digo Funcional</h3>\n<p>structured_prompt = \"\"\"<br>\n<instructions><br>\nEres un asistente de atenci√≥n al cliente de AnyCorp. Sigue las pol√≠ticas descritas.<br>\n</instructions><br>\n<policy><br>\n**Pol√≠tica de Reembolsos**<br>\n- Ofrecer reembolsos seg√∫n las directrices.<br>\n- Documentar todas las transacciones.<br>\n</policy><br>\n&#x3C;user_query><br>\nMe gustar√≠a devolver un producto defectuoso.<br>\n&#x3C;/user_query><br>\n\"\"\"</p>\n<p>response = client.chat.completions.create(<br>\nmodel=‚Äúo1-mini‚Äù,<br>\nmessages=[{‚Äúrole‚Äù: ‚Äúuser‚Äù, ‚Äúcontent‚Äù: structured_prompt}]<br>\n)<br>\nprint(response.choices[0].message.content)</p>\n<h3 id=\"salida-1\">Salida</h3>\n<p>El modelo generar√° una respuesta acorde a la pol√≠tica definida, ayudando a resolver la solicitud del cliente.</p>\n<hr>\n<h3 id=\"ejemplo-3-asesor√≠a-legal-con-few-shot-prompting\">Ejemplo 3: Asesor√≠a Legal con Few-Shot Prompting</h3>\n<p>En este caso, utilizamos un ejemplo previo para proporcionar contexto y generar una respuesta legal bien fundamentada.</p>\n<h3 id=\"c√≥digo-funcional-2\">C√≥digo Funcional</h3>\n<p>example_prompt = \"\"\"<br>\n<prompt><br>\nEres un abogado especializado en leyes de competencia.<br>\n</prompt><br>\n<example><br>\n<question><br>\nEstoy considerando colaborar con un competidor en una campa√±a de marketing conjunto. ¬øEs legal?<br>\n</question><br>\n<response><br>\nLas colaboraciones entre competidores pueden ser legales bajo ciertas condiciones:<br>\n- Evitar acuerdos per se ilegales.<br>\n- Garantizar transparencia y l√≠mites claros.<br>\n</response><br>\n</example><br>\n<query><br>\nUna empresa m√°s grande ofrece incentivos a proveedores para no trabajar conmigo. ¬øEs esto legal?<br>\n</query><br>\n\"\"\"</p>\n<p>response = client.chat.completions.create(<br>\nmodel=‚Äúo1-mini‚Äù,<br>\nmessages=[{‚Äúrole‚Äù: ‚Äúuser‚Äù, ‚Äúcontent‚Äù: example_prompt}]<br>\n)<br>\nprint(response.choices[0].message.content)</p>\n<h3 id=\"salida-2\">Salida</h3>\n<p>El modelo genera una respuesta profesional basada en el contexto del ejemplo, ayudando a identificar riesgos legales.</p>\n<hr>\n<h3 id=\"enlaces-a-la-documentaci√≥n\">Enlaces a la Documentaci√≥n</h3>\n<ul>\n<li><strong>OpenAI Python SDK</strong>: <a href=\"https://platform.openai.com/docs/\">Documentaci√≥n oficial</a></li>\n<li><strong>O1 Model</strong>: Aprende m√°s sobre modelos avanzados como O1 en <a href=\"https://www.deeplearning.ai/\">DeepLearning.AI</a>.</li>\n<li><strong>Gu√≠a de Prompting</strong>: Mejora tus <em>prompts</em> con <a href=\"https://platform.openai.com/docs/guides/chat\">ejemplos y mejores pr√°cticas</a>.</li>\n</ul>\n<hr>\n<h3 id=\"aplicaciones-pr√°cticas\">Aplicaciones Pr√°cticas</h3>\n<p>El modelo O1 es √∫til en diferentes √°reas:</p>\n<ol>\n<li><strong>Atenci√≥n al cliente:</strong> Automatizaci√≥n de respuestas personalizadas.</li>\n<li><strong>Asesor√≠a legal:</strong> Generaci√≥n de an√°lisis legales iniciales.</li>\n<li><strong>Ciencia y salud:</strong> Procesamiento de datos moleculares.</li>\n</ol>\n<p>Explora c√≥mo aplicar estas t√©cnicas en tus propios proyectos y comparte tus resultados con la comunidad. üåü</p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hern√°ndez</a> on <a href=\"https://medium.com/p/670e2d94c708\">December 20, 2024</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/c%C3%B3mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c%C3%B3digo-funcional-670e2d94c708\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional","description":"","tags":["code","OpenAI","O1"],"time":4,"featured":true,"timestamp":"2024-12-20T12:20:33-0300","filename":"2024-12-20_C-mo-Funciona-el-Modelo-O1--Principios--Ejemplos-Reales-y-C-digo-Funcional-670e2d94c708"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2024-12-20_C-mo-Funciona-el-Modelo-O1--Principios--Ejemplos-Reales-y-C-digo-Funcional-670e2d94c708.md";
				const url = "/blog/2024-12-20_C-mo-Funciona-el-Modelo-O1--Principios--Ejemplos-Reales-y-C-digo-Funcional-670e2d94c708";
				function rawContent() {
					return "   \n                                        \n                                                                                   \n               \n                              \n       \n              \n                                     \n                                                                                                              \n   \n\nC√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional\n==========================================================================\n\nC√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional\n\n* * *\n\n### C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional\n\n![](https://cdn-images-1.medium.com/max/800/1*URToiWO3AO7yamdVXN-rcg.png)\n\n[https://www.howtouselinux.com/post/how-the-openai-o1-model-stands-out-heres-what-we-discovered](https://www.howtouselinux.com/post/how-the-openai-o1-model-stands-out-heres-what-we-discovered)\n\n### C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional\n\nLa inteligencia artificial est√° revolucionando m√∫ltiples industrias gracias a modelos avanzados como **O1**. Este modelo ofrece respuestas claras, precisas y contextualizadas mediante t√©cnicas de _prompting_ efectivas. A continuaci√≥n, exploraremos los principios de dise√±o del modelo, ejemplos pr√°cticos, y c√≥mo puedes empezar a trabajar con √©l, incluyendo c√≥digo funcional y enlaces a documentaci√≥n relevante.\n\n* * *\n\n### Principios Fundamentales del Modelo¬†O1\n\nEl modelo **O1** sigue una serie de principios para optimizar su desempe√±o y garantizar resultados confiables:\n\n1.  **Simplicidad y Directo al Punto**  \n    ¬†Evitar indicaciones extensas o razonamientos expl√≠citos (_Chain of Thought_ o CoT), para aprovechar el razonamiento interno del modelo y evitar respuestas redundantes o confusas.\n2.  **Estructuras Consistentes**  \n    ¬†Utilizar formatos como JSON, XML o Markdown para estructurar las solicitudes y garantizar salidas uniformes, especialmente √∫tiles para procesos automatizados.\n3.  **Ejemplos Contextuales**  \n    ¬†Incorporar ejemplos simples (_few-shot prompting_) para proporcionar un marco claro y efectivo al modelo.\n\nEn cada caso, el modelo genera respuestas optimizadas siguiendo estos principios.\n\n* * *\n\n### Ejemplo 1: Generar SMILES IDs para Mol√©culas\n\nEste ejemplo muestra c√≥mo dise√±ar un _prompt_ efectivo para obtener identificadores moleculares (SMILES).\n\n### C√≥digo Funcional\n\n\\# Importar bibliotecas necesarias  \nfrom openai import OpenAI  \n  \n\\# Configurar la API key  \nopenai\\_api\\_key = \"TU\\_API\\_KEY\"  \nclient = OpenAI(api\\_key=openai\\_api\\_key)  \n\\# Definir el prompt  \ngood\\_prompt = \"\"\"  \nEres un qu√≠mico computacional. Genera una funci√≥n en Python que obtenga los SMILES IDs  \npara todas las mol√©culas relacionadas con la insulina.  \n\"\"\"  \n\\# Hacer la solicitud al modelo  \nresponse = client.chat.completions.create(  \n    model=\"o1-mini\",  \n    messages=\\[{\"role\": \"user\", \"content\": good\\_prompt}\\]  \n)  \n\\# Mostrar la respuesta  \nprint(response.choices\\[0\\].message.content)\n\n### Salida\n\nEl modelo genera un c√≥digo funcional para extraer los SMILES IDs. Puedes adaptarlo f√°cilmente a tus necesidades.\n\n* * *\n\n### Ejemplo 2: Atenci√≥n al Cliente con¬†XML\n\nEste ejemplo demuestra c√≥mo utilizar un formato estructurado para mejorar las respuestas del modelo en escenarios de atenci√≥n al cliente.\n\n### C√≥digo Funcional\n\nstructured\\_prompt = \"\"\"  \n<instructions>  \n    Eres un asistente de atenci√≥n al cliente de AnyCorp. Sigue las pol√≠ticas descritas.  \n</instructions>  \n<policy>  \n    \\*\\*Pol√≠tica de Reembolsos\\*\\*  \n    - Ofrecer reembolsos seg√∫n las directrices.  \n    - Documentar todas las transacciones.  \n</policy>  \n<user\\_query>  \n    Me gustar√≠a devolver un producto defectuoso.  \n</user\\_query>  \n\"\"\"  \n  \nresponse = client.chat.completions.create(  \n    model=\"o1-mini\",  \n    messages=\\[{\"role\": \"user\", \"content\": structured\\_prompt}\\]  \n)  \nprint(response.choices\\[0\\].message.content)\n\n### Salida\n\nEl modelo generar√° una respuesta acorde a la pol√≠tica definida, ayudando a resolver la solicitud del cliente.\n\n* * *\n\n### Ejemplo 3: Asesor√≠a Legal con Few-Shot Prompting\n\nEn este caso, utilizamos un ejemplo previo para proporcionar contexto y generar una respuesta legal bien fundamentada.\n\n### C√≥digo Funcional\n\nexample\\_prompt = \"\"\"  \n<prompt>  \n    Eres un abogado especializado en leyes de competencia.  \n</prompt>  \n<example>  \n<question>  \n    Estoy considerando colaborar con un competidor en una campa√±a de marketing conjunto. ¬øEs legal?  \n</question>  \n<response>  \n    Las colaboraciones entre competidores pueden ser legales bajo ciertas condiciones:  \n    - Evitar acuerdos per se ilegales.  \n    - Garantizar transparencia y l√≠mites claros.  \n</response>  \n</example>  \n<query>  \n    Una empresa m√°s grande ofrece incentivos a proveedores para no trabajar conmigo. ¬øEs esto legal?  \n</query>  \n\"\"\"  \n  \nresponse = client.chat.completions.create(  \n    model=\"o1-mini\",  \n    messages=\\[{\"role\": \"user\", \"content\": example\\_prompt}\\]  \n)  \nprint(response.choices\\[0\\].message.content)\n\n### Salida\n\nEl modelo genera una respuesta profesional basada en el contexto del ejemplo, ayudando a identificar riesgos legales.\n\n* * *\n\n### Enlaces a la Documentaci√≥n\n\n*   **OpenAI Python SDK**: [Documentaci√≥n oficial](https://platform.openai.com/docs/)\n*   **O1 Model**: Aprende m√°s sobre modelos avanzados como O1 en [DeepLearning.AI](https://www.deeplearning.ai/).\n*   **Gu√≠a de Prompting**: Mejora tus _prompts_ con [ejemplos y mejores pr√°cticas](https://platform.openai.com/docs/guides/chat).\n\n* * *\n\n### Aplicaciones Pr√°cticas\n\nEl modelo O1 es √∫til en diferentes √°reas:\n\n1.  **Atenci√≥n al cliente:** Automatizaci√≥n de respuestas personalizadas.\n2.  **Asesor√≠a legal:** Generaci√≥n de an√°lisis legales iniciales.\n3.  **Ciencia y salud:** Procesamiento de datos moleculares.\n\nExplora c√≥mo aplicar estas t√©cnicas en tus propios proyectos y comparte tus resultados con la comunidad. üåü\n\nBy [Jaime Hern√°ndez](https://medium.com/@devjaime) on [December 20, 2024](https://medium.com/p/670e2d94c708).\n\n[Canonical link](https://medium.com/@devjaime/c%C3%B3mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c%C3%B3digo-funcional-670e2d94c708)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"c√≥mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c√≥digo-funcional","text":"C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional"},{"depth":3,"slug":"c√≥mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c√≥digo-funcional-1","text":"C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional"},{"depth":3,"slug":"c√≥mo-funciona-el-modelo-o1-principios-ejemplos-reales-y-c√≥digo-funcional-2","text":"C√≥mo Funciona el Modelo O1: Principios, Ejemplos Reales y C√≥digo Funcional"},{"depth":3,"slug":"principios-fundamentales-del-modeloo1","text":"Principios Fundamentales del Modelo¬†O1"},{"depth":3,"slug":"ejemplo-1-generar-smiles-ids-para-mol√©culas","text":"Ejemplo 1: Generar SMILES IDs para Mol√©culas"},{"depth":3,"slug":"c√≥digo-funcional","text":"C√≥digo Funcional"},{"depth":3,"slug":"salida","text":"Salida"},{"depth":3,"slug":"ejemplo-2-atenci√≥n-al-cliente-conxml","text":"Ejemplo 2: Atenci√≥n al Cliente con¬†XML"},{"depth":3,"slug":"c√≥digo-funcional-1","text":"C√≥digo Funcional"},{"depth":3,"slug":"salida-1","text":"Salida"},{"depth":3,"slug":"ejemplo-3-asesor√≠a-legal-con-few-shot-prompting","text":"Ejemplo 3: Asesor√≠a Legal con Few-Shot Prompting"},{"depth":3,"slug":"c√≥digo-funcional-2","text":"C√≥digo Funcional"},{"depth":3,"slug":"salida-2","text":"Salida"},{"depth":3,"slug":"enlaces-a-la-documentaci√≥n","text":"Enlaces a la Documentaci√≥n"},{"depth":3,"slug":"aplicaciones-pr√°cticas","text":"Aplicaciones Pr√°cticas"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

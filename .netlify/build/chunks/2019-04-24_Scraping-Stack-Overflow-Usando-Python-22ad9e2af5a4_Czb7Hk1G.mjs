/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"scraping-stack-overflow-usando-python\">Scraping Stack Overflow Usando Python</h1>\n<p>Escribo este articulo debido a que estuve viendo el video Scraping Stack Overflow Using Python Tutorial | Beautiful Soup</p>\n<hr>\n<h3 id=\"scraping-stack-overflow-usandopython\">Scraping Stack Overflow Usando Python</h3>\n<p>Escribo este articulo debido a que estuve viendo el video Scraping Stack Overflow Using Python Tutorial | Beautiful Soup</p>\n<p>Me pareció genial como en el vídeo se nos muestra el uso de scrapping en Python y quise replicarlo y dejar mi experiencia, Nota importante sigan los vídeos y a la persona detrás de estos artículos un tipo muy inteligente y sus vídeos de Flutter son geniales.</p>\n<p>Para los que no conozcan el termino “scraping”</p>\n<p>La definición de scraping es la siguiente</p>\n<p><strong><em>Web scraping</em></strong> es una técnica utilizada mediante <a href=\"https://es.wikipedia.org/wiki/Programa_inform%C3%A1tico\" title=\"Programa informático\">programas de software</a> para extraer información de <a href=\"https://es.wikipedia.org/wiki/Sitio_web\" title=\"Sitio web\">sitios web</a>. Usualmente, estos programas simulan la navegación de un humano en la <a href=\"https://es.wikipedia.org/wiki/World_Wide_Web\" title=\"World Wide Web\">World Wide Web</a> ya sea utilizando el <a href=\"https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\">protocolo HTTP</a> manualmente, o incrustando un <a href=\"https://es.wikipedia.org/wiki/Navegador_web\" title=\"Navegador web\">navegador</a> en una <a href=\"https://es.wikipedia.org/wiki/Aplicaci%C3%B3n_inform%C3%A1tica\" title=\"Aplicación informática\">aplicación</a>.</p>\n<p>Este tutorial se nos muestra la forma de obtener una pagina web y tomar su información para poder transformarla en un archivo json que después podrá ser encapsulada y consumida.</p>\n<p>Lo primero es descargar python de la pagina oficial</p>\n<p><a href=\"https://www.python.org/downloads/\">https://www.python.org/downloads/</a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*R27V3urNQJ7kIcF32ytqMA.png\" alt=\"\"></p>\n<h3 id=\"asegurate-de-tener-python-pip\">Asegurate de tener Python &#x26; pip</h3>\n<p>Antes de continuar, asegurate de que tienes Python y que esta disponible en tu línea de comandos. Puedes verificar esto ejecutando:</p>\n<p>$ python —version</p>\n<p>Deberías tener un output como <code>3.7.X</code>.</p>\n<p>Nota</p>\n<p>Si eres nuevo y obtienes un error como este:</p>\n<blockquote>\n<p><strong>>>></strong> python<br>\nTraceback (most recent call last):<br>\n File \"<stdin>\", line 1, in <module><br>\nNameError: name ‘python’ is not defined</module></stdin></p>\n</blockquote>\n<p>Es porque este comando tiene la intención de correr en un <em>shell</em> (también llamado <em>terminal</em> o <em>consola</em>).</p>\n<p>Adicionalmente, necesitas asegurarte que tienes pip disponible. Puedes verificar esto ejecutando:</p>\n<p>$ pip —version<br>\npip 9.0.1</p>\n<p>Si tienes instalado Python desde su fuente, con un instalador de <a href=\"https://python.org/\">python.org</a>, o via <a href=\"https://pipenv-es.readthedocs.io/es/latest/install.html#id3\">`Homebrew`_</a>deberías ya tener pip. Si estas en Linux e instalaste a través de tu manejador de paquetes, tal vez necesites <a href=\"https://pip.pypa.io/en/stable/installing/\">instalar pip</a> por separado.</p>\n<p>Si tu plan es instalar pipenv usando Hombrew puedes saltarte este paso. El instalador de Homebrew se encarga de pip por ti.</p>\n<h3 id=\"instalando-pipenv\">Instalando Pipenv</h3>\n<p>Pipenv es un manejador de dependencias para los proyectos de Python. Si estas familiarizado con Node.js” <a href=\"https://www.npmjs.com/\">npm</a> o Ruby <a href=\"http://bundler.io/\">bundler</a>, es similar en espíritu a estas herramientas. Mientras pip puede instalar paquetes de Python, Pipenv es recomendado como herramienta de nivel superior que simplifica el manejo de dependencias para casos comunes.</p>\n<p>Use <code>pip</code> to install Pipenv:</p>\n<p>$ pip install —user pipenv</p>\n<p>Algunas capturas<br>\nLo primero que realice fue instalar homebrew</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*ndCcXoBfX1s7eYLU0RUB2Q.png\" alt=\"\"></p>\n<p>Despues de eso instale pipenv desde hombrew</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*aw3ylNSJRDQ9DuFClK6dqA.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*7WSQZeOzCgGkh28sHKINaQ.png\" alt=\"\"></p>\n<p>Puedes descargar el código fuente desde</p>\n<p><a href=\"https://github.com/devjaime/webscraping\">https://github.com/devjaime/webscraping</a></p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hernández</a> on <a href=\"https://medium.com/p/22ad9e2af5a4\">April 24, 2019</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/scraping-stack-overflow-usando-python-22ad9e2af5a4\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"Scraping Stack Overflow Usando Python","description":"","tags":["code","scrapping","python"],"time":4,"featured":true,"timestamp":"2019-04-24T12:20:31-0300","filename":"2019-04-24_Scraping-Stack-Overflow-Usando-Python-22ad9e2af5a4"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2019-04-24_Scraping-Stack-Overflow-Usando-Python-22ad9e2af5a4.md";
				const url = "/blog/2019-04-24_Scraping-Stack-Overflow-Usando-Python-22ad9e2af5a4";
				function rawContent() {
					return "   \n                                        \n                                              \n               \n                                     \n       \n              \n                                     \n                                                                         \n   \n\nScraping Stack Overflow Usando Python\n=====================================\n\nEscribo este articulo debido a que estuve viendo el video Scraping Stack Overflow Using Python Tutorial | Beautiful Soup\n\n* * *\n\n### Scraping Stack Overflow Usando Python\n\nEscribo este articulo debido a que estuve viendo el video Scraping Stack Overflow Using Python Tutorial | Beautiful Soup\n\nMe pareció genial como en el vídeo se nos muestra el uso de scrapping en Python y quise replicarlo y dejar mi experiencia, Nota importante sigan los vídeos y a la persona detrás de estos artículos un tipo muy inteligente y sus vídeos de Flutter son geniales.\n\nPara los que no conozcan el termino “scraping”\n\nLa definición de scraping es la siguiente\n\n**_Web scraping_** es una técnica utilizada mediante [programas de software](https://es.wikipedia.org/wiki/Programa_inform%C3%A1tico \"Programa informático\") para extraer información de [sitios web](https://es.wikipedia.org/wiki/Sitio_web \"Sitio web\"). Usualmente, estos programas simulan la navegación de un humano en la [World Wide Web](https://es.wikipedia.org/wiki/World_Wide_Web \"World Wide Web\") ya sea utilizando el [protocolo HTTP](https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol \"Hypertext Transfer Protocol\") manualmente, o incrustando un [navegador](https://es.wikipedia.org/wiki/Navegador_web \"Navegador web\") en una [aplicación](https://es.wikipedia.org/wiki/Aplicaci%C3%B3n_inform%C3%A1tica \"Aplicación informática\").\n\nEste tutorial se nos muestra la forma de obtener una pagina web y tomar su información para poder transformarla en un archivo json que después podrá ser encapsulada y consumida.\n\nLo primero es descargar python de la pagina oficial\n\n[https://www.python.org/downloads/](https://www.python.org/downloads/)\n\n![](https://cdn-images-1.medium.com/max/800/1*R27V3urNQJ7kIcF32ytqMA.png)\n\n### Asegurate de tener Python & pip\n\nAntes de continuar, asegurate de que tienes Python y que esta disponible en tu línea de comandos. Puedes verificar esto ejecutando:\n\n$ python --version\n\nDeberías tener un output como `3.7.X`.\n\nNota\n\nSi eres nuevo y obtienes un error como este:\n\n> **\\>>>** python  \n> Traceback (most recent call last):  \n>  File \"<stdin>\", line 1, in <module>  \n> NameError: name 'python' is not defined\n\nEs porque este comando tiene la intención de correr en un _shell_ (también llamado _terminal_ o _consola_).\n\nAdicionalmente, necesitas asegurarte que tienes pip disponible. Puedes verificar esto ejecutando:\n\n$ pip --version  \npip 9.0.1\n\nSi tienes instalado Python desde su fuente, con un instalador de [python.org](https://python.org/), o via [\\`Homebrew\\`\\_](https://pipenv-es.readthedocs.io/es/latest/install.html#id3)deberías ya tener pip. Si estas en Linux e instalaste a través de tu manejador de paquetes, tal vez necesites [instalar pip](https://pip.pypa.io/en/stable/installing/) por separado.\n\nSi tu plan es instalar pipenv usando Hombrew puedes saltarte este paso. El instalador de Homebrew se encarga de pip por ti.\n\n### Instalando Pipenv\n\nPipenv es un manejador de dependencias para los proyectos de Python. Si estas familiarizado con Node.js” [npm](https://www.npmjs.com/) o Ruby [bundler](http://bundler.io/), es similar en espíritu a estas herramientas. Mientras pip puede instalar paquetes de Python, Pipenv es recomendado como herramienta de nivel superior que simplifica el manejo de dependencias para casos comunes.\n\nUse `pip` to install Pipenv:\n\n$ pip install --user pipenv\n\n  \nAlgunas capturas  \nLo primero que realice fue instalar homebrew\n\n![](https://cdn-images-1.medium.com/max/800/1*ndCcXoBfX1s7eYLU0RUB2Q.png)\n\nDespues de eso instale pipenv desde hombrew  \n  \n\n![](https://cdn-images-1.medium.com/max/800/1*aw3ylNSJRDQ9DuFClK6dqA.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*7WSQZeOzCgGkh28sHKINaQ.png)\n\nPuedes descargar el código fuente desde \n\n[https://github.com/devjaime/webscraping](https://github.com/devjaime/webscraping)  \n  \n\nBy [Jaime Hernández](https://medium.com/@devjaime) on [April 24, 2019](https://medium.com/p/22ad9e2af5a4).\n\n[Canonical link](https://medium.com/@devjaime/scraping-stack-overflow-usando-python-22ad9e2af5a4)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"scraping-stack-overflow-usando-python","text":"Scraping Stack Overflow Usando Python"},{"depth":3,"slug":"scraping-stack-overflow-usandopython","text":"Scraping Stack Overflow Usando Python"},{"depth":3,"slug":"asegurate-de-tener-python-pip","text":"Asegurate de tener Python & pip"},{"depth":3,"slug":"instalando-pipenv","text":"Instalando Pipenv"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

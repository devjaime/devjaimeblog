/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"día-4-geolocation-xamarinforms-con-api-xamarinessentials\">Día 4 Geolocation XamarinForms con Api XamarinEssentials</h1>\n<p>La clase de Geolocalización proporciona un API para recuperar las coordenadas actuales de geolocalización del dispositivo.</p>\n<hr>\n<h3 id=\"día-4-geolocation-xamarinforms-con-api-xamarinessentials-1\">Día 4 Geolocation XamarinForms con Api XamarinEssentials</h3>\n<p>La clase de Geolocalización proporciona un API para recuperar las coordenadas actuales de geolocalización del dispositivo.</p>\n<p>Para empezar con este proyecto abriremos nuestro Visual Studio</p>\n<p>Crearemos un nuevo proyecto</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*jXlA4RMUKE2z12HPR26IWg.png\" alt=\"\"></p>\n<p>Seleccionaremos Aplicación Móvil (Xamarin.Forms)</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*O6mfYAuUqbLhJg9h5eb-Tw.png\" alt=\"\"></p>\n<p>Crearemos nuestra solución Geolocalización</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*ngxma5dj2s_7nSOZFK7RoQ.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*4f_RyNU3-qDvQj-YTwRczw.png\" alt=\"\"></p>\n<p>Una vez creado nuestro proyecto, agregaremos el paquete nuGet Xamarin.Essentials como se muestra a continuación.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*AF2Klsyd5g2adCQfkJh-5g.png\" alt=\"\"></p>\n<p>El link de nuestro patrón de diseño y al igual que en post anteriores lo dejare acá</p>\n<p><a href=\"https://drive.google.com/open?id=1QwNzT8fc5O8d8X2gmyvD45kRRdzB8eMA\" title=\"https://drive.google.com/open?id=1QwNzT8fc5O8d8X2gmyvD45kRRdzB8eMA\"><strong>MVVM.rar</strong><br>\n_Edit description_drive.google.com</a><a href=\"https://drive.google.com/open?id=1QwNzT8fc5O8d8X2gmyvD45kRRdzB8eMA\"></a></p>\n<p>Solo deben copiarlo al proyecto como se muestra a continuación.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*XWb_39kJfThyMgss9-mvCw.png\" alt=\"\"></p>\n<p>Una vez realizado esto crearemos un page llamado GeolocationPage.xaml, (esto en nuestra carpeta View).</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*CIK7QoZCE7ktsGIX4xjjZw.png\" alt=\"\"></p>\n<p>Luego en nuestra carpeta ViewModel crearemos la clase GeolocationViewModel</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*bdZ10oasX7J1mF-We6LhMg.png\" alt=\"\"></p>\n<p>Nuestra Vista GeolocationPage.xaml tendrá el siguiente código</p>\n<p>Donde la información obtenida sera la siguiente:</p>\n<p>Última ubicación conocida.</p>\n<p>Ubicación actual.</p>\n<p>La exactitud</p>\n<p>Nuestra clase de la vista tendrá el siguiente código</p>\n<p>y nuestro ViewModel tendrá el siguiente código.</p>\n<p>También debemos considerar los permisos para nuestra plataforma de destino en este caso Android</p>\n<p>Archivo AndroidManifiest</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*YaOJViOdUbnAX4tUSGfLvA.png\" alt=\"\"></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*WRhAEb5OCgjxNEX1vrRsng.png\" alt=\"\"></p>\n<p>A continuación los permisos para que los incluyas.</p>\n<p>en nuestro app.xaml.cs apunta a nuestra pagina creada de la siguiente forma.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*3PS9TQ9QqwNAS7AQfjuW8g.png\" alt=\"\"></p>\n<p>Ahora podrás ejecutar la aplicación, como veras te aparecerán las coordenadas de tu ubicación actual (en este caso aparecen las de mi casa).</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*06RbuyXBzWdVkHixaE2izQ.png\" alt=\"\"></p>\n<p>En el próximo post y debido a las cosas que se pueden hacer con esta librería intentare realizar algo más llamativo relacionado con mapas.</p>\n<p>Se me olvidaba!! el código fuente de la app lo pueden descargar desde</p>\n<p><a href=\"https://github.com/devjaime/geolocalizacion\" title=\"https://github.com/devjaime/geolocalizacion\"><strong>devjaime/geolocalizacion</strong><br>\n_obtiene la localización actual en xamarin forms con Xamarin Essentials - devjaime/geolocalizacion_github.com</a><a href=\"https://github.com/devjaime/geolocalizacion\"></a></p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hernández</a> on <a href=\"https://medium.com/p/fe79dbb3c9e5\">April 20, 2019</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/d%C3%ADa-4-geolocation-xamarinforms-con-api-xamarinessentials-fe79dbb3c9e5\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"Día 4 Geolocation XamarinForms con Api XamarinEssentials ","description":"","tags":["code","Xamarin","XamarinForms"],"time":4,"featured":true,"timestamp":"2019-04-20T12:20:31-0300","filename":"2019-04-20_D-a-4-Geolocation-XamarinForms-con-Api-XamarinEssentials-fe79dbb3c9e5"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2019-04-20_D-a-4-Geolocation-XamarinForms-con-Api-XamarinEssentials-fe79dbb3c9e5.md";
				const url = "/blog/2019-04-20_D-a-4-Geolocation-XamarinForms-con-Api-XamarinEssentials-fe79dbb3c9e5";
				function rawContent() {
					return "   \n                                        \n                                                                  \n               \n                                         \n       \n              \n                                     \n                                                                                            \n   \n\nDía 4 Geolocation XamarinForms con Api XamarinEssentials\n========================================================\n\nLa clase de Geolocalización proporciona un API para recuperar las coordenadas actuales de geolocalización del dispositivo.\n\n* * *\n\n### Día 4 Geolocation XamarinForms con Api XamarinEssentials\n\nLa clase de Geolocalización proporciona un API para recuperar las coordenadas actuales de geolocalización del dispositivo.\n\nPara empezar con este proyecto abriremos nuestro Visual Studio\n\nCrearemos un nuevo proyecto\n\n![](https://cdn-images-1.medium.com/max/800/1*jXlA4RMUKE2z12HPR26IWg.png)\n\nSeleccionaremos Aplicación Móvil (Xamarin.Forms)\n\n![](https://cdn-images-1.medium.com/max/800/1*O6mfYAuUqbLhJg9h5eb-Tw.png)\n\nCrearemos nuestra solución Geolocalización\n\n![](https://cdn-images-1.medium.com/max/800/1*ngxma5dj2s_7nSOZFK7RoQ.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*4f_RyNU3-qDvQj-YTwRczw.png)\n\nUna vez creado nuestro proyecto, agregaremos el paquete nuGet Xamarin.Essentials como se muestra a continuación.\n\n![](https://cdn-images-1.medium.com/max/800/1*AF2Klsyd5g2adCQfkJh-5g.png)\n\nEl link de nuestro patrón de diseño y al igual que en post anteriores lo dejare acá\n\n[**MVVM.rar**  \n_Edit description_drive.google.com](https://drive.google.com/open?id=1QwNzT8fc5O8d8X2gmyvD45kRRdzB8eMA \"https://drive.google.com/open?id=1QwNzT8fc5O8d8X2gmyvD45kRRdzB8eMA\")[](https://drive.google.com/open?id=1QwNzT8fc5O8d8X2gmyvD45kRRdzB8eMA)\n\nSolo deben copiarlo al proyecto como se muestra a continuación.\n\n![](https://cdn-images-1.medium.com/max/800/1*XWb_39kJfThyMgss9-mvCw.png)\n\nUna vez realizado esto crearemos un page llamado GeolocationPage.xaml, (esto en nuestra carpeta View).\n\n![](https://cdn-images-1.medium.com/max/800/1*CIK7QoZCE7ktsGIX4xjjZw.png)\n\nLuego en nuestra carpeta ViewModel crearemos la clase GeolocationViewModel\n\n![](https://cdn-images-1.medium.com/max/800/1*bdZ10oasX7J1mF-We6LhMg.png)\n\nNuestra Vista GeolocationPage.xaml tendrá el siguiente código\n\nDonde la información obtenida sera la siguiente:\n\nÚltima ubicación conocida.\n\nUbicación actual.\n\nLa exactitud\n\nNuestra clase de la vista tendrá el siguiente código\n\ny nuestro ViewModel tendrá el siguiente código.\n\nTambién debemos considerar los permisos para nuestra plataforma de destino en este caso Android\n\nArchivo AndroidManifiest\n\n![](https://cdn-images-1.medium.com/max/800/1*YaOJViOdUbnAX4tUSGfLvA.png)\n\n![](https://cdn-images-1.medium.com/max/800/1*WRhAEb5OCgjxNEX1vrRsng.png)\n\nA continuación los permisos para que los incluyas.\n\nen nuestro app.xaml.cs apunta a nuestra pagina creada de la siguiente forma.\n\n![](https://cdn-images-1.medium.com/max/800/1*3PS9TQ9QqwNAS7AQfjuW8g.png)\n\nAhora podrás ejecutar la aplicación, como veras te aparecerán las coordenadas de tu ubicación actual (en este caso aparecen las de mi casa).\n\n![](https://cdn-images-1.medium.com/max/800/1*06RbuyXBzWdVkHixaE2izQ.png)\n\nEn el próximo post y debido a las cosas que se pueden hacer con esta librería intentare realizar algo más llamativo relacionado con mapas.\n\nSe me olvidaba!! el código fuente de la app lo pueden descargar desde\n\n[**devjaime/geolocalizacion**  \n_obtiene la localización actual en xamarin forms con Xamarin Essentials - devjaime/geolocalizacion_github.com](https://github.com/devjaime/geolocalizacion \"https://github.com/devjaime/geolocalizacion\")[](https://github.com/devjaime/geolocalizacion)\n\nBy [Jaime Hernández](https://medium.com/@devjaime) on [April 20, 2019](https://medium.com/p/fe79dbb3c9e5).\n\n[Canonical link](https://medium.com/@devjaime/d%C3%ADa-4-geolocation-xamarinforms-con-api-xamarinessentials-fe79dbb3c9e5)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"día-4-geolocation-xamarinforms-con-api-xamarinessentials","text":"Día 4 Geolocation XamarinForms con Api XamarinEssentials"},{"depth":3,"slug":"día-4-geolocation-xamarinforms-con-api-xamarinessentials-1","text":"Día 4 Geolocation XamarinForms con Api XamarinEssentials"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

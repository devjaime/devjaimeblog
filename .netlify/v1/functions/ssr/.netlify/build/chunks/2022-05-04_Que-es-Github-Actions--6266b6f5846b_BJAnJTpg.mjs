/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"que-es-github-actions\">Que es Github Actions?</h1>\n<p>Es una característica ofrecida por GitHub que permite a los desarrolladores a crear workflows que pueden ser usados para compilar, probar e…</p>\n<hr>\n<h3 id=\"que-es-githubactions\">Que es Github Actions?</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/0*w5Fsp29pbWIUpW7Q.png\" alt=\"\"></p>\n<blockquote>\n<p>Es una característica ofrecida por <strong>GitHub</strong> que permite a los desarrolladores a crear workflows que pueden ser usados para compilar, probar e implementar código, nos da la posibilidad de crear flujos de CI/CD dentro de un repositorio de Git.</p>\n</blockquote>\n<p>Por lo menos eso dice al buscar en google.</p>\n<h3 id=\"contexto\">Contexto</h3>\n<p>Debo reconocer que no soy muy actualizado en cuanto a las últimas tecnologías (o más bien espero que estas sean aceptadas por la comunidad) para poder probarlas.</p>\n<p>GitHub Actions no es la excepción y aunque lo tengo integrado en mi sitio web personal, para mi trabajo diario suelo ocupar un despliegue continuo con Docker y Kubernetes (o en un pipeline de Jenkins).</p>\n<h3 id=\"inicio-rápido-para-acciones-degithub\">Inicio rápido para acciones de GitHub</h3>\n<p><a href=\"https://docs.github.com/es/actions/quickstart\" title=\"https://docs.github.com/es/actions/quickstart\"><strong>Quickstart for GitHub Actions - GitHub Docs</strong><br>\n_You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you’ll add a workflow…_docs.github.com</a><a href=\"https://docs.github.com/es/actions/quickstart\"></a></p>\n<p>En el link anterior podrás encontrar una breve introducción y lo que voy a comentar no es más que lo mismo que la documentación oficial que también esta en español por lo cual te invito a leerla.</p>\n<h3 id=\"introducción\">Introducción</h3>\n<p>Solo necesita un repositorio de GitHub para crear y ejecutar un flujo de trabajo de acciones de GitHub. En esta guía, agregará un flujo de trabajo que demuestra algunas de las funciones esenciales de GitHub Actions.</p>\n<p>El siguiente ejemplo muestra cómo se pueden activar automáticamente los trabajos de GitHub Actions, dónde se ejecutan y cómo pueden interactuar con el código en su repositorio.</p>\n<h3 id=\"creando-tu-primer-flujo-detrabajo\">Creando tu primer flujo de trabajo</h3>\n<ol>\n<li>Cree un <code>.github/workflows</code>directorio en su repositorio en GitHub si este directorio aún no existe.</li>\n<li>En el <code>.github/workflows</code>directorio, cree un archivo llamado <code>github-actions-nameactios.yml</code>. Para obtener más información, consulte ” <a href=\"https://docs.github.com/es/github/managing-files-in-a-repository/creating-new-files\">Creación de nuevos archivos</a> ”.</li>\n<li>Copie los siguientes contenidos YAML en el <code>github-actions-nameactios.yml</code></li>\n</ol>\n<p>Acá me detendré un momento para mostrar mi propio flujo y la problemática a resolver para que ustedes también puedan crear sus propias integraciones.</p>\n<h3 id=\"caso-1-appreact\">Caso 1 App React</h3>\n<p>Mi sitio web es una app react desplegada en <a href=\"https://www.netlify.com/\">netlify</a></p>\n<p><a href=\"https://github.com/devjaime/websitepersonal/actions\" title=\"https://github.com/devjaime/websitepersonal/actions\"><strong>Actions · devjaime/websitepersonal</strong><br>\n_You can’t perform that action at this time. You signed in with another tab or window. You signed out in another tab or…_github.com</a><a href=\"https://github.com/devjaime/websitepersonal/actions\"></a></p>\n<p>Dejo el enlace pero aquí, lo que necesitaba era que al momento de hacer un pull request y un push de mis cambios se ejecutara test automatizados y una vez completados realizara el deploy de los cambios en el servidor de netlify</p>\n<p>Para lo anterior seguí la siguiente estructura en el archivo <a href=\"https://github.com/devjaime/websitepersonal/blob/2c359658af78ca0d1d6434346505478d4de97346/.github/workflows/netlify.js.yml\">.github/workflows/netlify.js.yml</a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*iFxGhxbHCasUGTuoJJTn9g.png\" alt=\"\"></p>\n<p>Nota: Ya existen actions predifinidas para distintas tipos de casos las cuales puedes ir viendo en el marketplace o puedes crear una propia</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*fWRQo6k4k6d1xUtettLrhg.png\" alt=\"\"></p>\n<h3 id=\"caso-2-copy-ftp-wordpress\">Caso 2 Copy FTP wordpress</h3>\n<p>Hace poco también tuve que copiar archivos diréctamenete a un servidor VPS de <a href=\"https://m.do.co/c/a2fcb9500d34\">digitalocean</a>, y también ocupe una actions para realizar este proceso al momento de hacer push a mis cambios.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*HAdfQW5Jkgiltq5Tr57xQw.png\" alt=\"\"></p>\n<p>Como vez es muy fácil crear tus propias acciones y puedes hacer lo que se te ocurra automatizar y desplegar con tu código, en este caso solo reemplazo la carpeta themes cada vez que se hace un push a una Branch X.</p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hernández</a> on <a href=\"https://medium.com/p/6266b6f5846b\">May 4, 2022</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/que-es-github-actions-6266b6f5846b\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"Que es Github Actions?","description":"","tags":["code","githubActions"],"time":4,"featured":true,"timestamp":"2022-05-04T12:20:31-0300","filename":"2022-05-04_Que-es-Github-Actions--6266b6f5846b"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2022-05-04_Que-es-Github-Actions--6266b6f5846b.md";
				const url = "/blog/2022-05-04_Que-es-Github-Actions--6266b6f5846b";
				function rawContent() {
					return "   \n                                        \n                               \n               \n                               \n       \n              \n                                     \n                                                          \n   \n\nQue es Github Actions?\n======================\n\nEs una característica ofrecida por GitHub que permite a los desarrolladores a crear workflows que pueden ser usados para compilar, probar e…\n\n* * *\n\n### Que es Github Actions?\n\n![](https://cdn-images-1.medium.com/max/800/0*w5Fsp29pbWIUpW7Q.png)\n\n> Es una característica ofrecida por **GitHub** que permite a los desarrolladores a crear workflows que pueden ser usados para compilar, probar e implementar código, nos da la posibilidad de crear flujos de CI/CD dentro de un repositorio de Git.\n\nPor lo menos eso dice al buscar en google.\n\n### Contexto\n\nDebo reconocer que no soy muy actualizado en cuanto a las últimas tecnologías (o más bien espero que estas sean aceptadas por la comunidad) para poder probarlas.\n\nGitHub Actions no es la excepción y aunque lo tengo integrado en mi sitio web personal, para mi trabajo diario suelo ocupar un despliegue continuo con Docker y Kubernetes (o en un pipeline de Jenkins).\n\n### Inicio rápido para acciones de GitHub\n\n[**Quickstart for GitHub Actions - GitHub Docs**  \n_You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow…_docs.github.com](https://docs.github.com/es/actions/quickstart \"https://docs.github.com/es/actions/quickstart\")[](https://docs.github.com/es/actions/quickstart)\n\nEn el link anterior podrás encontrar una breve introducción y lo que voy a comentar no es más que lo mismo que la documentación oficial que también esta en español por lo cual te invito a leerla.\n\n### Introducción\n\nSolo necesita un repositorio de GitHub para crear y ejecutar un flujo de trabajo de acciones de GitHub. En esta guía, agregará un flujo de trabajo que demuestra algunas de las funciones esenciales de GitHub Actions.\n\nEl siguiente ejemplo muestra cómo se pueden activar automáticamente los trabajos de GitHub Actions, dónde se ejecutan y cómo pueden interactuar con el código en su repositorio.\n\n### Creando tu primer flujo de trabajo\n\n1.  Cree un `.github/workflows`directorio en su repositorio en GitHub si este directorio aún no existe.\n2.  En el `.github/workflows`directorio, cree un archivo llamado `github-actions-nameactios.yml`. Para obtener más información, consulte \" [Creación de nuevos archivos](https://docs.github.com/es/github/managing-files-in-a-repository/creating-new-files) \".\n3.  Copie los siguientes contenidos YAML en el `github-actions-nameactios.yml`\n\nAcá me detendré un momento para mostrar mi propio flujo y la problemática a resolver para que ustedes también puedan crear sus propias integraciones.\n\n### Caso 1 App React\n\nMi sitio web es una app react desplegada en [netlify](https://www.netlify.com/)\n\n[**Actions · devjaime/websitepersonal**  \n_You can't perform that action at this time. You signed in with another tab or window. You signed out in another tab or…_github.com](https://github.com/devjaime/websitepersonal/actions \"https://github.com/devjaime/websitepersonal/actions\")[](https://github.com/devjaime/websitepersonal/actions)\n\nDejo el enlace pero aquí, lo que necesitaba era que al momento de hacer un pull request y un push de mis cambios se ejecutara test automatizados y una vez completados realizara el deploy de los cambios en el servidor de netlify\n\nPara lo anterior seguí la siguiente estructura en el archivo [.github/workflows/netlify.js.yml](https://github.com/devjaime/websitepersonal/blob/2c359658af78ca0d1d6434346505478d4de97346/.github/workflows/netlify.js.yml)\n\n![](https://cdn-images-1.medium.com/max/800/1*iFxGhxbHCasUGTuoJJTn9g.png)\n\nNota: Ya existen actions predifinidas para distintas tipos de casos las cuales puedes ir viendo en el marketplace o puedes crear una propia\n\n![](https://cdn-images-1.medium.com/max/800/1*fWRQo6k4k6d1xUtettLrhg.png)\n\n### Caso 2 Copy FTP wordpress\n\nHace poco también tuve que copiar archivos diréctamenete a un servidor VPS de [digitalocean](https://m.do.co/c/a2fcb9500d34), y también ocupe una actions para realizar este proceso al momento de hacer push a mis cambios.\n\n![](https://cdn-images-1.medium.com/max/800/1*HAdfQW5Jkgiltq5Tr57xQw.png)\n\nComo vez es muy fácil crear tus propias acciones y puedes hacer lo que se te ocurra automatizar y desplegar con tu código, en este caso solo reemplazo la carpeta themes cada vez que se hace un push a una Branch X.\n\nBy [Jaime Hernández](https://medium.com/@devjaime) on [May 4, 2022](https://medium.com/p/6266b6f5846b).\n\n[Canonical link](https://medium.com/@devjaime/que-es-github-actions-6266b6f5846b)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"que-es-github-actions","text":"Que es Github Actions?"},{"depth":3,"slug":"que-es-githubactions","text":"Que es Github Actions?"},{"depth":3,"slug":"contexto","text":"Contexto"},{"depth":3,"slug":"inicio-rápido-para-acciones-degithub","text":"Inicio rápido para acciones de GitHub"},{"depth":3,"slug":"introducción","text":"Introducción"},{"depth":3,"slug":"creando-tu-primer-flujo-detrabajo","text":"Creando tu primer flujo de trabajo"},{"depth":3,"slug":"caso-1-appreact","text":"Caso 1 App React"},{"depth":3,"slug":"caso-2-copy-ftp-wordpress","text":"Caso 2 Copy FTP wordpress"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$BlogLayout } from './BlogLayout_COI89YL8.mjs';

const html = () => "<h1 id=\"día-uno-xamarin-essential-acelerometro\">Día uno Xamarin Essential Acelerometro</h1>\n<p>Para empezar el día de hoy debemos considerar lo siguiente</p>\n<hr>\n<h3 id=\"día-uno-xamarin-essential-acelerometro-1\">Día uno Xamarin Essential Acelerometro</h3>\n<p>Para empezar el día de hoy debemos considerar lo siguiente</p>\n<p>Crear nuestro proyecto Xamarin, este proyecto sera creada en la nueva versión de Visual Studio 2019 si aun no lo tienen lo pueden descargar desde el siguiente link</p>\n<p><a href=\"https://visualstudio.microsoft.com/es/downloads/\" title=\"https://visualstudio.microsoft.com/es/downloads/\"><strong>Descargas | IDE, Code y Team Foundation Server | Visual Studio</strong><br>\n_Descargas Descarga gratuita Descargar versión preliminar Evaluación gratuita Descargar versión preliminar Evaluación…_visualstudio.microsoft.com</a><a href=\"https://visualstudio.microsoft.com/es/downloads/\"></a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*f3yOSezBo-HI1mi0KXqX7w.png\" alt=\"\"></p>\n<p>Debes seleccionar donde dice, Crear un proyecto.</p>\n<p>Luego de lo anterior selecciona Xamarin Forms que es la solución múltiplataforma que implementaremos</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*cRfPXghdFdLTCY2oU8isjQ.png\" alt=\"\"></p>\n<p>Identifica un nombre de solución y selecciona el botón Crear</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*ToMebxjzhF2v1OB664MH5Q.png\" alt=\"\"></p>\n<p>Nombre de la solución Xamarin.Forms</p>\n<p>Para este ejemplo seleccionaremos una plantilla en blanco y seleccionaremos como plataforma de destino Android y IOS</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*4W0hsJNoen-hZU3WXDkiEg.png\" alt=\"\"></p>\n<p>Realizaremos click derecho en la solución para abrir administración de paquetes nuGet, en donde seleccionaremos Xamarin.Essentials, este instalaremos la versión estable más reciente.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*fdVW_kg_IZbsudXUfFnhAw.png\" alt=\"\"></p>\n<p>Confirmaremos los paquetes nuGet instalados.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*XTj9cLbczi1q8lhSK1gSVg.png\" alt=\"\"></p>\n<p>En nuestra solución crearemos 3 carpetas para nuestro patrón MVVM</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*tcOBbqorqLTpvqaTB4pJyw.png\" alt=\"\"></p>\n<p>Crearemos una pagina de contenido llamada AccelerometerPage.xaml</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*txh7FiyfawOncD7LoNf60Q.png\" alt=\"\"></p>\n<p>En la carpeta ViewModel deberás crear una clase llamada AccelerometerViewModel.cs</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*zBPyk_rjk8Nv7X0uzvU59g.png\" alt=\"\"></p>\n<p>También agregaremos la clase base llamada BaseViewModel.cs</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*OI42I1EvdzQSiDjQhhz11Q.png\" alt=\"\"></p>\n<p>y la clase ObservableObjet que nos servirá para notificar nuestras propiedades a la vista.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*AQdjghuAmvjonwkAMG8GJg.png\" alt=\"\"></p>\n<p>Las 3 clases creadas a continuación para que copien su código dentro de ellas</p>\n<p>AcelerómetroViewModel.cs</p>\n<p>BaseViewModel.cs</p>\n<p>ObservableObject.cs</p>\n<p>Crearemos una vista llamada BasePage.cs</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*BwWV2i0bY6nCKm7G77Ofkg.png\" alt=\"\"></p>\n<p>El código de este a continuación</p>\n<p>Nuestro xaml tendrá la siguiente estructura</p>\n<p>Una vez implementado esta vista probaremos nuestra aplicación.</p>\n<p>Para esto ocupo un dispositivo Android (Dispositivo físico) .</p>\n<p>La visualización final de esta parte a continuación</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*D4Ws2ceJOrkyKjC4QXHedQ.png\" alt=\"\"></p>\n<p>El código de esta aplicación lo puedes encontrar en:</p>\n<p><a href=\"https://github.com/devjaime/Acelerometro\" title=\"https://github.com/devjaime/Acelerometro\"><strong>devjaime / acelerometro acelerometro</strong><br>\n<em>Xamarin Forms Utilizando Xamarin Essentials — devjaime / Acelerometro</em> github.com</a><a href=\"https://github.com/devjaime/Acelerometro\"></a></p>\n<p>By <a href=\"https://medium.com/@devjaime\">Jaime Hernández</a> on <a href=\"https://medium.com/p/517507ef7615\">April 17, 2019</a>.</p>\n<p><a href=\"https://medium.com/@devjaime/d%C3%ADa-uno-xamarin-essential-acelerometro-517507ef7615\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on March 15, 2025.</p>";

				const frontmatter = {"layout":"../../layouts/BlogLayout.astro","title":"Día uno Xamarin Essential Acelerometro","description":"","tags":["code","Xamarin"],"time":4,"featured":true,"timestamp":"2019-04-17T12:20:31-0300","filename":"2019-04-17_D-a-uno-Xamarin-Essential-Acelerometro-517507ef7615"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/blog/2019-04-17_D-a-uno-Xamarin-Essential-Acelerometro-517507ef7615.md";
				const url = "/blog/2019-04-17_D-a-uno-Xamarin-Essential-Acelerometro-517507ef7615";
				function rawContent() {
					return "   \n                                        \n                                               \n               \n                         \n       \n              \n                                     \n                                                                          \n   \n\nDía uno Xamarin Essential Acelerometro\n======================================\n\nPara empezar el día de hoy debemos considerar lo siguiente\n\n* * *\n\n### Día uno Xamarin Essential Acelerometro\n\nPara empezar el día de hoy debemos considerar lo siguiente\n\nCrear nuestro proyecto Xamarin, este proyecto sera creada en la nueva versión de Visual Studio 2019 si aun no lo tienen lo pueden descargar desde el siguiente link\n\n[**Descargas | IDE, Code y Team Foundation Server | Visual Studio**  \n_Descargas Descarga gratuita Descargar versión preliminar Evaluación gratuita Descargar versión preliminar Evaluación…_visualstudio.microsoft.com](https://visualstudio.microsoft.com/es/downloads/ \"https://visualstudio.microsoft.com/es/downloads/\")[](https://visualstudio.microsoft.com/es/downloads/)\n\n![](https://cdn-images-1.medium.com/max/800/1*f3yOSezBo-HI1mi0KXqX7w.png)\n\nDebes seleccionar donde dice, Crear un proyecto.\n\nLuego de lo anterior selecciona Xamarin Forms que es la solución múltiplataforma que implementaremos\n\n![](https://cdn-images-1.medium.com/max/800/1*cRfPXghdFdLTCY2oU8isjQ.png)\n\nIdentifica un nombre de solución y selecciona el botón Crear\n\n![](https://cdn-images-1.medium.com/max/800/1*ToMebxjzhF2v1OB664MH5Q.png)\n\nNombre de la solución Xamarin.Forms\n\nPara este ejemplo seleccionaremos una plantilla en blanco y seleccionaremos como plataforma de destino Android y IOS\n\n![](https://cdn-images-1.medium.com/max/800/1*4W0hsJNoen-hZU3WXDkiEg.png)\n\nRealizaremos click derecho en la solución para abrir administración de paquetes nuGet, en donde seleccionaremos Xamarin.Essentials, este instalaremos la versión estable más reciente.\n\n![](https://cdn-images-1.medium.com/max/800/1*fdVW_kg_IZbsudXUfFnhAw.png)\n\nConfirmaremos los paquetes nuGet instalados.\n\n![](https://cdn-images-1.medium.com/max/800/1*XTj9cLbczi1q8lhSK1gSVg.png)\n\nEn nuestra solución crearemos 3 carpetas para nuestro patrón MVVM\n\n![](https://cdn-images-1.medium.com/max/800/1*tcOBbqorqLTpvqaTB4pJyw.png)\n\nCrearemos una pagina de contenido llamada AccelerometerPage.xaml\n\n![](https://cdn-images-1.medium.com/max/800/1*txh7FiyfawOncD7LoNf60Q.png)\n\nEn la carpeta ViewModel deberás crear una clase llamada AccelerometerViewModel.cs\n\n![](https://cdn-images-1.medium.com/max/800/1*zBPyk_rjk8Nv7X0uzvU59g.png)\n\nTambién agregaremos la clase base llamada BaseViewModel.cs\n\n![](https://cdn-images-1.medium.com/max/800/1*OI42I1EvdzQSiDjQhhz11Q.png)\n\ny la clase ObservableObjet que nos servirá para notificar nuestras propiedades a la vista.\n\n![](https://cdn-images-1.medium.com/max/800/1*AQdjghuAmvjonwkAMG8GJg.png)\n\nLas 3 clases creadas a continuación para que copien su código dentro de ellas\n\nAcelerómetroViewModel.cs\n\nBaseViewModel.cs\n\nObservableObject.cs\n\nCrearemos una vista llamada BasePage.cs\n\n![](https://cdn-images-1.medium.com/max/800/1*BwWV2i0bY6nCKm7G77Ofkg.png)\n\nEl código de este a continuación\n\nNuestro xaml tendrá la siguiente estructura\n\nUna vez implementado esta vista probaremos nuestra aplicación.\n\nPara esto ocupo un dispositivo Android (Dispositivo físico) .\n\nLa visualización final de esta parte a continuación\n\n![](https://cdn-images-1.medium.com/max/800/1*D4Ws2ceJOrkyKjC4QXHedQ.png)\n\nEl código de esta aplicación lo puedes encontrar en:\n\n[**devjaime / acelerometro acelerometro**  \n_Xamarin Forms Utilizando Xamarin Essentials — devjaime / Acelerometro_ github.com](https://github.com/devjaime/Acelerometro \"https://github.com/devjaime/Acelerometro\")[](https://github.com/devjaime/Acelerometro)\n\nBy [Jaime Hernández](https://medium.com/@devjaime) on [April 17, 2019](https://medium.com/p/517507ef7615).\n\n[Canonical link](https://medium.com/@devjaime/d%C3%ADa-uno-xamarin-essential-acelerometro-517507ef7615)\n\nExported from [Medium](https://medium.com) on March 15, 2025.";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"día-uno-xamarin-essential-acelerometro","text":"Día uno Xamarin Essential Acelerometro"},{"depth":3,"slug":"día-uno-xamarin-essential-acelerometro-1","text":"Día uno Xamarin Essential Acelerometro"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };

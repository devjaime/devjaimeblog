/* empty css                                                                    */
import { d as createComponent, i as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server_C7nAViGe.mjs';
import 'kleur/colors';
import { $ as $$ProjectLayout } from './ProjectLayout_DBW4xXT4.mjs';

const html = () => "<h2 id=\"the-details\">The Details</h2>\n<p>Herramienta avanzada de análisis JSON con capacidades de inteligencia artificial desarrollada en Python con Streamlit. El proyecto proporciona una interfaz web completa para formatear, analizar, comparar y generar datos JSON, con soporte para múltiples idiomas y integración con IA.</p>\n<h2 id=\"core-technologies\">Core Technologies</h2>\n<h3 id=\"backend\">Backend</h3>\n<ul>\n<li>🐍 <strong>Python 3.8+</strong> → Lenguaje principal robusto</li>\n<li>🚀 <strong>Streamlit</strong> → Framework web para aplicaciones de datos</li>\n<li>🧠 <strong>Groq AI</strong> → Integración con modelos de IA avanzados</li>\n<li>📊 <strong>Pandas</strong> → Manipulación y análisis de datos</li>\n<li>🔍 <strong>DeepDiff</strong> → Comparación profunda de estructuras</li>\n</ul>\n<h3 id=\"data-processing\">Data Processing</h3>\n<ul>\n<li>📝 <strong>JSON Processing</strong> → Procesamiento avanzado de JSON</li>\n<li>🔄 <strong>Type Inference</strong> → Inferencia automática de tipos</li>\n<li>📊 <strong>CSV Export</strong> → Exportación a formato CSV</li>\n<li>🎲 <strong>Mock Data Generation</strong> → Generación de datos de prueba</li>\n<li>🌐 <strong>Multi-language Support</strong> → Soporte internacional</li>\n</ul>\n<h3 id=\"ai-integration\">AI Integration</h3>\n<ul>\n<li>🤖 <strong>Natural Language Queries</strong> → Consultas en lenguaje natural</li>\n<li>🧠 <strong>Contextual Understanding</strong> → Comprensión contextual</li>\n<li>🔍 <strong>Intelligent Analysis</strong> → Análisis inteligente</li>\n<li>📊 <strong>Data Insights</strong> → Insights automáticos</li>\n</ul>\n<h2 id=\"key-features\">Key Features</h2>\n<h3 id=\"-json-formatting--validation\">🎨 <strong>JSON Formatting &#x26; Validation</strong></h3>\n<ul>\n<li>✨ <strong>Pretty Print</strong> → Formateo elegante con syntax highlighting</li>\n<li>✅ <strong>Validation</strong> → Validación de sintaxis JSON</li>\n<li>🔍 <strong>Error Detection</strong> → Detección y reporte de errores</li>\n<li>📋 <strong>History Management</strong> → Gestión de historial de JSONs</li>\n<li>💾 <strong>Session State</strong> → Persistencia de estado de sesión</li>\n</ul>\n<h3 id=\"-ai-powered-analysis\">🤖 <strong>AI-Powered Analysis</strong></h3>\n<ul>\n<li>🧠 <strong>Natural Language Queries</strong> → Preguntas en lenguaje natural</li>\n<li>🔍 <strong>Structure Analysis</strong> → Análisis de estructura de datos</li>\n<li>📊 <strong>Data Insights</strong> → Insights automáticos sobre los datos</li>\n<li>🎯 <strong>Contextual Responses</strong> → Respuestas contextuales inteligentes</li>\n<li>🌐 <strong>Multi-language AI</strong> → IA en español e inglés</li>\n</ul>\n<h3 id=\"-json-comparison\">🔄 <strong>JSON Comparison</strong></h3>\n<ul>\n<li>📊 <strong>Side-by-side Comparison</strong> → Comparación lado a lado</li>\n<li>🔍 <strong>Difference Highlighting</strong> → Destacado de diferencias</li>\n<li>📈 <strong>Detailed Reports</strong> → Reportes detallados de cambios</li>\n<li>🎯 <strong>Structural Analysis</strong> → Análisis estructural profundo</li>\n<li>📋 <strong>Change Tracking</strong> → Seguimiento de cambios</li>\n</ul>\n<h3 id=\"-mock-data-generation\">🎲 <strong>Mock Data Generation</strong></h3>\n<ul>\n<li>🏗️ <strong>Schema-based Generation</strong> → Generación basada en esquemas</li>\n<li>📊 <strong>Multiple Data Types</strong> → Soporte para múltiples tipos</li>\n<li>🌐 <strong>Realistic Data</strong> → Datos realistas y coherentes</li>\n<li>📈 <strong>Scalable Generation</strong> → Generación escalable (hasta 1000 registros)</li>\n<li>💾 <strong>Export Options</strong> → Opciones de exportación</li>\n</ul>\n<h3 id=\"-type-generation\">🔧 <strong>Type Generation</strong></h3>\n<ul>\n<li>🐍 <strong>Python Classes</strong> → Generación de clases Python</li>\n<li>🟦 <strong>TypeScript Interfaces</strong> → Interfaces TypeScript</li>\n<li>🔷 <strong>Golang Structs</strong> → Estructuras Go</li>\n<li>🎯 <strong>Smart Inference</strong> → Inferencia inteligente de tipos</li>\n<li>📊 <strong>Nested Structures</strong> → Soporte para estructuras anidadas</li>\n</ul>\n<h2 id=\"advanced-features\">Advanced Features</h2>\n<h3 id=\"-internationalization\">🌐 <strong>Internationalization</strong></h3>\n<ul>\n<li>🇪🇸 <strong>Spanish Support</strong> → Soporte completo en español</li>\n<li>🇬🇧 <strong>English Support</strong> → Soporte completo en inglés</li>\n<li>🔄 <strong>Dynamic Language Switching</strong> → Cambio dinámico de idioma</li>\n<li>🎯 <strong>Context-aware Translation</strong> → Traducción contextual</li>\n<li>📋 <strong>Localized UI</strong> → Interfaz completamente localizada</li>\n</ul>\n<h3 id=\"-data-export--integration\">📊 <strong>Data Export &#x26; Integration</strong></h3>\n<ul>\n<li>📊 <strong>CSV Export</strong> → Exportación a CSV para Excel</li>\n<li>📈 <strong>Smart Column Ordering</strong> → Ordenamiento inteligente de columnas</li>\n<li>🔍 <strong>Data Type Recognition</strong> → Reconocimiento de tipos de datos</li>\n<li>📋 <strong>Excel Compatibility</strong> → Compatibilidad con Excel</li>\n<li>💾 <strong>Multiple Formats</strong> → Múltiples formatos de exportación</li>\n</ul>\n<h3 id=\"-testing--quality\">🧪 <strong>Testing &#x26; Quality</strong></h3>\n<ul>\n<li>✅ <strong>Comprehensive Test Suite</strong> → Suite de pruebas completa</li>\n<li>📊 <strong>100% UI Coverage</strong> → Cobertura completa de UI</li>\n<li>🧪 <strong>Unit Testing</strong> → Pruebas unitarias</li>\n<li>🔍 <strong>Integration Testing</strong> → Pruebas de integración</li>\n<li>📈 <strong>Quality Metrics</strong> → Métricas de calidad</li>\n</ul>\n<h2 id=\"technical-implementation\">Technical Implementation</h2>\n<h3 id=\"️-architecture-overview\">🏗️ <strong>Architecture Overview</strong></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Main application structure</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">class</span><span style=\"color:#B392F0\"> JSONInspectorUI</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    def</span><span style=\"color:#79B8FF\"> __init__</span><span style=\"color:#E1E4E8\">(self):</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.setup_i18n()</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.initialize_session_state()</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.render_header()</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    def</span><span style=\"color:#B392F0\"> run</span><span style=\"color:#E1E4E8\">(self):</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.format_section()</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.compare_section()</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.mock_data_section()</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">        self</span><span style=\"color:#E1E4E8\">.render_history()</span></span></code></pre>\n<h3 id=\"-ui-components\">🎨 <strong>UI Components</strong></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Streamlit interface with internationalization</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">def</span><span style=\"color:#B392F0\"> setup_i18n</span><span style=\"color:#E1E4E8\">(self):</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    self</span><span style=\"color:#E1E4E8\">.lang </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> st.sidebar.selectbox(</span><span style=\"color:#9ECBFF\">\"Idioma / Language\"</span><span style=\"color:#E1E4E8\">, [</span><span style=\"color:#9ECBFF\">\"Español\"</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">\"English\"</span><span style=\"color:#E1E4E8\">])</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    self</span><span style=\"color:#E1E4E8\">.texts </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">        \"Español\"</span><span style=\"color:#E1E4E8\">: {</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">            \"title\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"JSON AI Inspector\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">            \"json_input\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"Ingresa tu JSON\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">            \"format_btn\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"Formatear JSON\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">            # ... más traducciones</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        },</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">        \"English\"</span><span style=\"color:#E1E4E8\">: {</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">            \"title\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"JSON AI Inspector\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">            \"json_input\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"Enter your JSON\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">            \"format_btn\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"Format JSON\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">            # ... more translations</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    }</span></span></code></pre>\n<h3 id=\"-ai-integration\">🤖 <strong>AI Integration</strong></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Groq AI integration for intelligent analysis</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">def</span><span style=\"color:#B392F0\"> ask_ai</span><span style=\"color:#E1E4E8\">(self, question: </span><span style=\"color:#79B8FF\">str</span><span style=\"color:#E1E4E8\">, json_data: </span><span style=\"color:#79B8FF\">dict</span><span style=\"color:#E1E4E8\">) -> </span><span style=\"color:#79B8FF\">str</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    if</span><span style=\"color:#F97583\"> not</span><span style=\"color:#E1E4E8\"> is_json_related(question):</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        return</span><span style=\"color:#79B8FF\"> self</span><span style=\"color:#E1E4E8\">.t[</span><span style=\"color:#9ECBFF\">\"invalid_question\"</span><span style=\"color:#E1E4E8\">]</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    client </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> Groq(</span><span style=\"color:#FFAB70\">api_key</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">os.getenv(</span><span style=\"color:#9ECBFF\">\"GROQ_API_KEY\"</span><span style=\"color:#E1E4E8\">))</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    response </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> client.chat.completions.create(</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">        model</span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\">\"llama3-8b-8192\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">        messages</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">[</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            {</span><span style=\"color:#9ECBFF\">\"role\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"system\"</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">\"content\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"Eres un experto en análisis JSON...\"</span><span style=\"color:#E1E4E8\">},</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            {</span><span style=\"color:#9ECBFF\">\"role\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">\"user\"</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">\"content\"</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#F97583\">f</span><span style=\"color:#9ECBFF\">\"JSON: </span><span style=\"color:#79B8FF\">{</span><span style=\"color:#E1E4E8\">json_data</span><span style=\"color:#79B8FF\">}\\n</span><span style=\"color:#9ECBFF\">Pregunta: </span><span style=\"color:#79B8FF\">{</span><span style=\"color:#E1E4E8\">question</span><span style=\"color:#79B8FF\">}</span><span style=\"color:#9ECBFF\">\"</span><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        ]</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    )</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    return</span><span style=\"color:#E1E4E8\"> response.choices[</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">].message.content</span></span></code></pre>\n<h3 id=\"-data-generation\">🎲 <strong>Data Generation</strong></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Mock data generation with type inference</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">def</span><span style=\"color:#B392F0\"> generate_mock_data</span><span style=\"color:#E1E4E8\">(json_structure: </span><span style=\"color:#79B8FF\">str</span><span style=\"color:#E1E4E8\">, num_records: </span><span style=\"color:#79B8FF\">int</span><span style=\"color:#F97583\"> =</span><span style=\"color:#79B8FF\"> 5</span><span style=\"color:#E1E4E8\">):</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    structure </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> analyze_json_structure(json_structure)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    records </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> []</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    for</span><span style=\"color:#E1E4E8\"> _ </span><span style=\"color:#F97583\">in</span><span style=\"color:#79B8FF\"> range</span><span style=\"color:#E1E4E8\">(num_records):</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        record </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        for</span><span style=\"color:#E1E4E8\"> field, field_type </span><span style=\"color:#F97583\">in</span><span style=\"color:#E1E4E8\"> structure.items():</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">            if</span><span style=\"color:#E1E4E8\"> field_type </span><span style=\"color:#F97583\">==</span><span style=\"color:#9ECBFF\"> \"email\"</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">                record[field] </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> fake.email()</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">            elif</span><span style=\"color:#E1E4E8\"> field_type </span><span style=\"color:#F97583\">==</span><span style=\"color:#9ECBFF\"> \"phone\"</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">                record[field] </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> fake.phone_number()</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">            elif</span><span style=\"color:#E1E4E8\"> field_type </span><span style=\"color:#F97583\">==</span><span style=\"color:#9ECBFF\"> \"date\"</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">                record[field] </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> fake.date_time().isoformat()</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">            # ... más tipos de datos</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        records.append(record)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    return</span><span style=\"color:#E1E4E8\"> records</span></span></code></pre>\n<h2 id=\"supported-data-types\">Supported Data Types</h2>\n<h3 id=\"-basic-types\">📊 <strong>Basic Types</strong></h3>\n<ul>\n<li>🔤 <strong>String</strong> → Cadenas de texto</li>\n<li>🔢 <strong>Integer</strong> → Números enteros</li>\n<li>🔢 <strong>Number</strong> → Números decimales</li>\n<li>✅ <strong>Boolean</strong> → Valores verdadero/falso</li>\n<li>📅 <strong>Date</strong> → Fechas y timestamps</li>\n<li>🆔 <strong>ObjectId</strong> → Identificadores únicos</li>\n</ul>\n<h3 id=\"-special-types\">🎯 <strong>Special Types</strong></h3>\n<ul>\n<li>📧 <strong>Email</strong> → Direcciones de correo electrónico</li>\n<li>📞 <strong>Phone</strong> → Números de teléfono</li>\n<li>🌐 <strong>URL</strong> → Enlaces web</li>\n<li>🔗 <strong>UUID</strong> → Identificadores únicos universales</li>\n<li>📊 <strong>Array</strong> → Arreglos con tipos específicos</li>\n<li>🎯 <strong>Any</strong> → Tipo flexible</li>\n</ul>\n<h3 id=\"️-complex-structures\">🏗️ <strong>Complex Structures</strong></h3>\n<ul>\n<li>📦 <strong>Nested Objects</strong> → Objetos anidados</li>\n<li>📊 <strong>Arrays of Objects</strong> → Arreglos de objetos</li>\n<li>🔄 <strong>Recursive Structures</strong> → Estructuras recursivas</li>\n<li>🎯 <strong>Mixed Types</strong> → Tipos mixtos</li>\n<li>📋 <strong>Dynamic Schemas</strong> → Esquemas dinámicos</li>\n</ul>\n<h2 id=\"performance--scalability\">Performance &#x26; Scalability</h2>\n<h3 id=\"-performance-metrics\">⚡ <strong>Performance Metrics</strong></h3>\n<ul>\n<li>🚀 <strong>Fast Processing</strong> → Procesamiento rápido de JSONs grandes</li>\n<li>📊 <strong>Memory Efficient</strong> → Uso eficiente de memoria</li>\n<li>🔄 <strong>Real-time Analysis</strong> → Análisis en tiempo real</li>\n<li>📈 <strong>Scalable Architecture</strong> → Arquitectura escalable</li>\n<li>⚡ <strong>Quick Response</strong> → Respuesta rápida de IA</li>\n</ul>\n<h3 id=\"-capacity-limits\">📊 <strong>Capacity Limits</strong></h3>\n<ul>\n<li>📋 <strong>JSON Size</strong> → Hasta 10MB por JSON</li>\n<li>🎲 <strong>Mock Data</strong> → Hasta 1000 registros</li>\n<li>🤖 <strong>AI Queries</strong> → Límites de uso gratuito</li>\n<li>📊 <strong>History Storage</strong> → Almacenamiento de historial</li>\n<li>🔄 <strong>Session Management</strong> → Gestión de sesiones</li>\n</ul>\n<h2 id=\"quality-assurance\">Quality Assurance</h2>\n<h3 id=\"-testing-strategy\">🧪 <strong>Testing Strategy</strong></h3>\n<ul>\n<li>✅ <strong>Unit Tests</strong> → Pruebas unitarias completas</li>\n<li>🔧 <strong>Integration Tests</strong> → Pruebas de integración</li>\n<li>🎨 <strong>UI Tests</strong> → Pruebas de interfaz de usuario</li>\n<li>📊 <strong>Performance Tests</strong> → Pruebas de rendimiento</li>\n<li>🔍 <strong>Security Tests</strong> → Pruebas de seguridad</li>\n</ul>\n<h3 id=\"-code-quality\">📈 <strong>Code Quality</strong></h3>\n<ul>\n<li>🎯 <strong>Code Coverage</strong> → 57% coverage del core</li>\n<li>📊 <strong>UI Coverage</strong> → 100% coverage de UI</li>\n<li>🔍 <strong>Static Analysis</strong> → Análisis estático</li>\n<li>📋 <strong>Documentation</strong> → Documentación completa</li>\n<li>🏆 <strong>Best Practices</strong> → Mejores prácticas</li>\n</ul>\n<h2 id=\"future-roadmap\">Future Roadmap</h2>\n<h3 id=\"-planned-features\">🚀 <strong>Planned Features</strong></h3>\n<ul>\n<li>🤖 <strong>Advanced AI Models</strong> → Modelos de IA más avanzados</li>\n<li>📊 <strong>Data Visualization</strong> → Visualización de datos</li>\n<li>🔗 <strong>API Integration</strong> → Integración con APIs externas</li>\n<li>📱 <strong>Mobile App</strong> → Aplicación móvil</li>\n<li>🌐 <strong>Web API</strong> → API web para integración</li>\n</ul>\n<h3 id=\"-enhancements\">🎯 <strong>Enhancements</strong></h3>\n<ul>\n<li>🔍 <strong>Schema Validation</strong> → Validación de esquemas</li>\n<li>📊 <strong>Advanced Analytics</strong> → Análisis avanzados</li>\n<li>🎨 <strong>Custom Themes</strong> → Temas personalizados</li>\n<li>🔄 <strong>Real-time Collaboration</strong> → Colaboración en tiempo real</li>\n<li>📋 <strong>Template Library</strong> → Biblioteca de plantillas</li>\n</ul>\n<h2 id=\"installation--usage\">Installation &#x26; Usage</h2>\n<h3 id=\"-quick-start\">📦 <strong>Quick Start</strong></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Clone the repository</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">git</span><span style=\"color:#9ECBFF\"> clone</span><span style=\"color:#9ECBFF\"> https://github.com/json-ai-tools/json-ai-inspector.git</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">cd</span><span style=\"color:#9ECBFF\"> json-ai-inspector</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Install dependencies</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">pip</span><span style=\"color:#9ECBFF\"> install</span><span style=\"color:#79B8FF\"> -r</span><span style=\"color:#9ECBFF\"> requirements.txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Set up environment (optional)</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">echo</span><span style=\"color:#9ECBFF\"> \"GROQ_API_KEY=your-api-key\"</span><span style=\"color:#F97583\"> ></span><span style=\"color:#9ECBFF\"> .env</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Run the application</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">streamlit</span><span style=\"color:#9ECBFF\"> run</span><span style=\"color:#9ECBFF\"> app.py</span></span></code></pre>\n<h3 id=\"-configuration\">🔧 <strong>Configuration</strong></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Environment variables</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">GROQ_API_KEY</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">your_groq_api_key  </span><span style=\"color:#6A737D\"># For AI features</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">STREAMLIT_THEME</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">dark            </span><span style=\"color:#6A737D\"># UI theme</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">LOG_LEVEL</span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\">INFO</span><span style=\"color:#6A737D\">                  # Logging level</span></span></code></pre>\n<h2 id=\"community--support\">Community &#x26; Support</h2>\n<h3 id=\"-open-source\">🌟 <strong>Open Source</strong></h3>\n<ul>\n<li>📋 <strong>MIT License</strong> → Licencia abierta</li>\n<li>🤝 <strong>Community Driven</strong> → Impulsado por la comunidad</li>\n<li>🔄 <strong>Regular Updates</strong> → Actualizaciones regulares</li>\n<li>📊 <strong>Active Development</strong> → Desarrollo activo</li>\n<li>🎯 <strong>Issue Tracking</strong> → Seguimiento de issues</li>\n</ul>\n<h3 id=\"-documentation\">📚 <strong>Documentation</strong></h3>\n<ul>\n<li>📖 <strong>Complete Docs</strong> → Documentación completa</li>\n<li>🎯 <strong>Code Examples</strong> → Ejemplos de código</li>\n<li>🔍 <strong>API Reference</strong> → Referencia de API</li>\n<li>📋 <strong>Contributing Guide</strong> → Guía de contribución</li>\n<li>🏆 <strong>Best Practices</strong> → Mejores prácticas</li>\n</ul>\n<h2 id=\"project-impact\">Project Impact</h2>\n<h3 id=\"-usage-statistics\">📈 <strong>Usage Statistics</strong></h3>\n<ul>\n<li>👥 <strong>Active Users</strong> → Usuarios activos crecientes</li>\n<li>📊 <strong>GitHub Stars</strong> → Estrellas en GitHub</li>\n<li>🔄 <strong>Contributions</strong> → Contribuciones de la comunidad</li>\n<li>📈 <strong>Download Growth</strong> → Crecimiento de descargas</li>\n<li>🌍 <strong>Global Reach</strong> → Alcance global</li>\n</ul>\n<h3 id=\"-recognition\">🏆 <strong>Recognition</strong></h3>\n<ul>\n<li>🥇 <strong>Developer Tools</strong> → Herramienta destacada</li>\n<li>📊 <strong>Community Choice</strong> → Elección de la comunidad</li>\n<li>🎯 <strong>Innovation Award</strong> → Premio a la innovación</li>\n<li>🌟 <strong>Quality Badge</strong> → Insignia de calidad</li>\n<li>📋 <strong>Documentation Excellence</strong> → Excelencia en documentación</li>\n</ul>\n<p>#️⃣ <strong>#Python #Streamlit #AI #JSON #DataAnalysis #OpenSource #DeveloperTools #MachineLearning</strong></p>";

				const frontmatter = {"layout":"../../layouts/ProjectLayout.astro","title":"JSON AI Inspector - Advanced JSON Analysis Tool","description":"Comprehensive JSON analysis tool with AI-powered insights, data generation, type inference, and multi-language support built with Streamlit.","tags":["Python","Streamlit","AI","JSON","Data Analysis","Open Source","Developer Tools"],"githubUrl":"https://github.com/json-ai-tools/json-ai-inspector","timestamp":"2024-10-15T09:00:00.000Z","featured":true,"filename":"json-ai-inspector"};
				const file = "/Users/devjaime/Documents/devjaimeblog/src/pages/projects/json-ai-inspector.md";
				const url = "/projects/json-ai-inspector";
				function rawContent() {
					return "   \n                                         \n                                                      \n                                                                                                                                                         \n                                                                                              \n                                                             \n                                    \n              \n                           \n   \n\n## The Details\n\nHerramienta avanzada de análisis JSON con capacidades de inteligencia artificial desarrollada en Python con Streamlit. El proyecto proporciona una interfaz web completa para formatear, analizar, comparar y generar datos JSON, con soporte para múltiples idiomas y integración con IA.\n\n## Core Technologies\n\n### Backend\n* 🐍 **Python 3.8+** → Lenguaje principal robusto\n* 🚀 **Streamlit** → Framework web para aplicaciones de datos\n* 🧠 **Groq AI** → Integración con modelos de IA avanzados\n* 📊 **Pandas** → Manipulación y análisis de datos\n* 🔍 **DeepDiff** → Comparación profunda de estructuras\n\n### Data Processing\n* 📝 **JSON Processing** → Procesamiento avanzado de JSON\n* 🔄 **Type Inference** → Inferencia automática de tipos\n* 📊 **CSV Export** → Exportación a formato CSV\n* 🎲 **Mock Data Generation** → Generación de datos de prueba\n* 🌐 **Multi-language Support** → Soporte internacional\n\n### AI Integration\n* 🤖 **Natural Language Queries** → Consultas en lenguaje natural\n* 🧠 **Contextual Understanding** → Comprensión contextual\n* 🔍 **Intelligent Analysis** → Análisis inteligente\n* 📊 **Data Insights** → Insights automáticos\n\n## Key Features\n\n### 🎨 **JSON Formatting & Validation**\n* ✨ **Pretty Print** → Formateo elegante con syntax highlighting\n* ✅ **Validation** → Validación de sintaxis JSON\n* 🔍 **Error Detection** → Detección y reporte de errores\n* 📋 **History Management** → Gestión de historial de JSONs\n* 💾 **Session State** → Persistencia de estado de sesión\n\n### 🤖 **AI-Powered Analysis**\n* 🧠 **Natural Language Queries** → Preguntas en lenguaje natural\n* 🔍 **Structure Analysis** → Análisis de estructura de datos\n* 📊 **Data Insights** → Insights automáticos sobre los datos\n* 🎯 **Contextual Responses** → Respuestas contextuales inteligentes\n* 🌐 **Multi-language AI** → IA en español e inglés\n\n### 🔄 **JSON Comparison**\n* 📊 **Side-by-side Comparison** → Comparación lado a lado\n* 🔍 **Difference Highlighting** → Destacado de diferencias\n* 📈 **Detailed Reports** → Reportes detallados de cambios\n* 🎯 **Structural Analysis** → Análisis estructural profundo\n* 📋 **Change Tracking** → Seguimiento de cambios\n\n### 🎲 **Mock Data Generation**\n* 🏗️ **Schema-based Generation** → Generación basada en esquemas\n* 📊 **Multiple Data Types** → Soporte para múltiples tipos\n* 🌐 **Realistic Data** → Datos realistas y coherentes\n* 📈 **Scalable Generation** → Generación escalable (hasta 1000 registros)\n* 💾 **Export Options** → Opciones de exportación\n\n### 🔧 **Type Generation**\n* 🐍 **Python Classes** → Generación de clases Python\n* 🟦 **TypeScript Interfaces** → Interfaces TypeScript\n* 🔷 **Golang Structs** → Estructuras Go\n* 🎯 **Smart Inference** → Inferencia inteligente de tipos\n* 📊 **Nested Structures** → Soporte para estructuras anidadas\n\n## Advanced Features\n\n### 🌐 **Internationalization**\n* 🇪🇸 **Spanish Support** → Soporte completo en español\n* 🇬🇧 **English Support** → Soporte completo en inglés\n* 🔄 **Dynamic Language Switching** → Cambio dinámico de idioma\n* 🎯 **Context-aware Translation** → Traducción contextual\n* 📋 **Localized UI** → Interfaz completamente localizada\n\n### 📊 **Data Export & Integration**\n* 📊 **CSV Export** → Exportación a CSV para Excel\n* 📈 **Smart Column Ordering** → Ordenamiento inteligente de columnas\n* 🔍 **Data Type Recognition** → Reconocimiento de tipos de datos\n* 📋 **Excel Compatibility** → Compatibilidad con Excel\n* 💾 **Multiple Formats** → Múltiples formatos de exportación\n\n### 🧪 **Testing & Quality**\n* ✅ **Comprehensive Test Suite** → Suite de pruebas completa\n* 📊 **100% UI Coverage** → Cobertura completa de UI\n* 🧪 **Unit Testing** → Pruebas unitarias\n* 🔍 **Integration Testing** → Pruebas de integración\n* 📈 **Quality Metrics** → Métricas de calidad\n\n## Technical Implementation\n\n### 🏗️ **Architecture Overview**\n```python\n# Main application structure\nclass JSONInspectorUI:\n    def __init__(self):\n        self.setup_i18n()\n        self.initialize_session_state()\n        self.render_header()\n    \n    def run(self):\n        self.format_section()\n        self.compare_section()\n        self.mock_data_section()\n        self.render_history()\n```\n\n### 🎨 **UI Components**\n```python\n# Streamlit interface with internationalization\ndef setup_i18n(self):\n    self.lang = st.sidebar.selectbox(\"Idioma / Language\", [\"Español\", \"English\"])\n    self.texts = {\n        \"Español\": {\n            \"title\": \"JSON AI Inspector\",\n            \"json_input\": \"Ingresa tu JSON\",\n            \"format_btn\": \"Formatear JSON\",\n            # ... más traducciones\n        },\n        \"English\": {\n            \"title\": \"JSON AI Inspector\",\n            \"json_input\": \"Enter your JSON\",\n            \"format_btn\": \"Format JSON\",\n            # ... more translations\n        }\n    }\n```\n\n### 🤖 **AI Integration**\n```python\n# Groq AI integration for intelligent analysis\ndef ask_ai(self, question: str, json_data: dict) -> str:\n    if not is_json_related(question):\n        return self.t[\"invalid_question\"]\n    \n    client = Groq(api_key=os.getenv(\"GROQ_API_KEY\"))\n    response = client.chat.completions.create(\n        model=\"llama3-8b-8192\",\n        messages=[\n            {\"role\": \"system\", \"content\": \"Eres un experto en análisis JSON...\"},\n            {\"role\": \"user\", \"content\": f\"JSON: {json_data}\\nPregunta: {question}\"}\n        ]\n    )\n    return response.choices[0].message.content\n```\n\n### 🎲 **Data Generation**\n```python\n# Mock data generation with type inference\ndef generate_mock_data(json_structure: str, num_records: int = 5):\n    structure = analyze_json_structure(json_structure)\n    records = []\n    \n    for _ in range(num_records):\n        record = {}\n        for field, field_type in structure.items():\n            if field_type == \"email\":\n                record[field] = fake.email()\n            elif field_type == \"phone\":\n                record[field] = fake.phone_number()\n            elif field_type == \"date\":\n                record[field] = fake.date_time().isoformat()\n            # ... más tipos de datos\n        records.append(record)\n    \n    return records\n```\n\n## Supported Data Types\n\n### 📊 **Basic Types**\n* 🔤 **String** → Cadenas de texto\n* 🔢 **Integer** → Números enteros\n* 🔢 **Number** → Números decimales\n* ✅ **Boolean** → Valores verdadero/falso\n* 📅 **Date** → Fechas y timestamps\n* 🆔 **ObjectId** → Identificadores únicos\n\n### 🎯 **Special Types**\n* 📧 **Email** → Direcciones de correo electrónico\n* 📞 **Phone** → Números de teléfono\n* 🌐 **URL** → Enlaces web\n* 🔗 **UUID** → Identificadores únicos universales\n* 📊 **Array** → Arreglos con tipos específicos\n* 🎯 **Any** → Tipo flexible\n\n### 🏗️ **Complex Structures**\n* 📦 **Nested Objects** → Objetos anidados\n* 📊 **Arrays of Objects** → Arreglos de objetos\n* 🔄 **Recursive Structures** → Estructuras recursivas\n* 🎯 **Mixed Types** → Tipos mixtos\n* 📋 **Dynamic Schemas** → Esquemas dinámicos\n\n## Performance & Scalability\n\n### ⚡ **Performance Metrics**\n* 🚀 **Fast Processing** → Procesamiento rápido de JSONs grandes\n* 📊 **Memory Efficient** → Uso eficiente de memoria\n* 🔄 **Real-time Analysis** → Análisis en tiempo real\n* 📈 **Scalable Architecture** → Arquitectura escalable\n* ⚡ **Quick Response** → Respuesta rápida de IA\n\n### 📊 **Capacity Limits**\n* 📋 **JSON Size** → Hasta 10MB por JSON\n* 🎲 **Mock Data** → Hasta 1000 registros\n* 🤖 **AI Queries** → Límites de uso gratuito\n* 📊 **History Storage** → Almacenamiento de historial\n* 🔄 **Session Management** → Gestión de sesiones\n\n## Quality Assurance\n\n### 🧪 **Testing Strategy**\n* ✅ **Unit Tests** → Pruebas unitarias completas\n* 🔧 **Integration Tests** → Pruebas de integración\n* 🎨 **UI Tests** → Pruebas de interfaz de usuario\n* 📊 **Performance Tests** → Pruebas de rendimiento\n* 🔍 **Security Tests** → Pruebas de seguridad\n\n### 📈 **Code Quality**\n* 🎯 **Code Coverage** → 57% coverage del core\n* 📊 **UI Coverage** → 100% coverage de UI\n* 🔍 **Static Analysis** → Análisis estático\n* 📋 **Documentation** → Documentación completa\n* 🏆 **Best Practices** → Mejores prácticas\n\n## Future Roadmap\n\n### 🚀 **Planned Features**\n* 🤖 **Advanced AI Models** → Modelos de IA más avanzados\n* 📊 **Data Visualization** → Visualización de datos\n* 🔗 **API Integration** → Integración con APIs externas\n* 📱 **Mobile App** → Aplicación móvil\n* 🌐 **Web API** → API web para integración\n\n### 🎯 **Enhancements**\n* 🔍 **Schema Validation** → Validación de esquemas\n* 📊 **Advanced Analytics** → Análisis avanzados\n* 🎨 **Custom Themes** → Temas personalizados\n* 🔄 **Real-time Collaboration** → Colaboración en tiempo real\n* 📋 **Template Library** → Biblioteca de plantillas\n\n## Installation & Usage\n\n### 📦 **Quick Start**\n```bash\n# Clone the repository\ngit clone https://github.com/json-ai-tools/json-ai-inspector.git\ncd json-ai-inspector\n\n# Install dependencies\npip install -r requirements.txt\n\n# Set up environment (optional)\necho \"GROQ_API_KEY=your-api-key\" > .env\n\n# Run the application\nstreamlit run app.py\n```\n\n### 🔧 **Configuration**\n```python\n# Environment variables\nGROQ_API_KEY=your_groq_api_key  # For AI features\nSTREAMLIT_THEME=dark            # UI theme\nLOG_LEVEL=INFO                  # Logging level\n```\n\n## Community & Support\n\n### 🌟 **Open Source**\n* 📋 **MIT License** → Licencia abierta\n* 🤝 **Community Driven** → Impulsado por la comunidad\n* 🔄 **Regular Updates** → Actualizaciones regulares\n* 📊 **Active Development** → Desarrollo activo\n* 🎯 **Issue Tracking** → Seguimiento de issues\n\n### 📚 **Documentation**\n* 📖 **Complete Docs** → Documentación completa\n* 🎯 **Code Examples** → Ejemplos de código\n* 🔍 **API Reference** → Referencia de API\n* 📋 **Contributing Guide** → Guía de contribución\n* 🏆 **Best Practices** → Mejores prácticas\n\n## Project Impact\n\n### 📈 **Usage Statistics**\n* 👥 **Active Users** → Usuarios activos crecientes\n* 📊 **GitHub Stars** → Estrellas en GitHub\n* 🔄 **Contributions** → Contribuciones de la comunidad\n* 📈 **Download Growth** → Crecimiento de descargas\n* 🌍 **Global Reach** → Alcance global\n\n### 🏆 **Recognition**\n* 🥇 **Developer Tools** → Herramienta destacada\n* 📊 **Community Choice** → Elección de la comunidad\n* 🎯 **Innovation Award** → Premio a la innovación\n* 🌟 **Quality Badge** → Insignia de calidad\n* 📋 **Documentation Excellence** → Excelencia en documentación\n\n#️⃣ **#Python #Streamlit #AI #JSON #DataAnalysis #OpenSource #DeveloperTools #MachineLearning**\n";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":2,"slug":"the-details","text":"The Details"},{"depth":2,"slug":"core-technologies","text":"Core Technologies"},{"depth":3,"slug":"backend","text":"Backend"},{"depth":3,"slug":"data-processing","text":"Data Processing"},{"depth":3,"slug":"ai-integration","text":"AI Integration"},{"depth":2,"slug":"key-features","text":"Key Features"},{"depth":3,"slug":"-json-formatting--validation","text":"🎨 JSON Formatting & Validation"},{"depth":3,"slug":"-ai-powered-analysis","text":"🤖 AI-Powered Analysis"},{"depth":3,"slug":"-json-comparison","text":"🔄 JSON Comparison"},{"depth":3,"slug":"-mock-data-generation","text":"🎲 Mock Data Generation"},{"depth":3,"slug":"-type-generation","text":"🔧 Type Generation"},{"depth":2,"slug":"advanced-features","text":"Advanced Features"},{"depth":3,"slug":"-internationalization","text":"🌐 Internationalization"},{"depth":3,"slug":"-data-export--integration","text":"📊 Data Export & Integration"},{"depth":3,"slug":"-testing--quality","text":"🧪 Testing & Quality"},{"depth":2,"slug":"technical-implementation","text":"Technical Implementation"},{"depth":3,"slug":"️-architecture-overview","text":"🏗️ Architecture Overview"},{"depth":3,"slug":"-ui-components","text":"🎨 UI Components"},{"depth":3,"slug":"-ai-integration","text":"🤖 AI Integration"},{"depth":3,"slug":"-data-generation","text":"🎲 Data Generation"},{"depth":2,"slug":"supported-data-types","text":"Supported Data Types"},{"depth":3,"slug":"-basic-types","text":"📊 Basic Types"},{"depth":3,"slug":"-special-types","text":"🎯 Special Types"},{"depth":3,"slug":"️-complex-structures","text":"🏗️ Complex Structures"},{"depth":2,"slug":"performance--scalability","text":"Performance & Scalability"},{"depth":3,"slug":"-performance-metrics","text":"⚡ Performance Metrics"},{"depth":3,"slug":"-capacity-limits","text":"📊 Capacity Limits"},{"depth":2,"slug":"quality-assurance","text":"Quality Assurance"},{"depth":3,"slug":"-testing-strategy","text":"🧪 Testing Strategy"},{"depth":3,"slug":"-code-quality","text":"📈 Code Quality"},{"depth":2,"slug":"future-roadmap","text":"Future Roadmap"},{"depth":3,"slug":"-planned-features","text":"🚀 Planned Features"},{"depth":3,"slug":"-enhancements","text":"🎯 Enhancements"},{"depth":2,"slug":"installation--usage","text":"Installation & Usage"},{"depth":3,"slug":"-quick-start","text":"📦 Quick Start"},{"depth":3,"slug":"-configuration","text":"🔧 Configuration"},{"depth":2,"slug":"community--support","text":"Community & Support"},{"depth":3,"slug":"-open-source","text":"🌟 Open Source"},{"depth":3,"slug":"-documentation","text":"📚 Documentation"},{"depth":2,"slug":"project-impact","text":"Project Impact"},{"depth":3,"slug":"-usage-statistics","text":"📈 Usage Statistics"},{"depth":3,"slug":"-recognition","text":"🏆 Recognition"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$ProjectLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { _page as _ };
